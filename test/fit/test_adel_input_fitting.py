import random
random.seed('This is an hashable objet to initialize the basic random number generator')
import numpy
import pandas
from adel.fit.adel_input_fitting import fit_adel_input_data_first, fit_adel_input_data_second

plant_ids = range(1,101)
cohort_probabilities = {'3': 0.0, '4': 0.900, '5': 0.967, '6': 0.817, '7': 0.083, '8': 0.0, '9': 0.0, '10': 0.0}
main_stem_leaves_number_probability_distribution = {'10': 0.145, '11': 0.818, '12': 0.036, '13': 0.0, '14': 0.0}
secondary_stem_leaves_number_coefficients = {'a_1': 0.9423, 'a_2': 0.555}
emf_1_main_stem_standard_deviation = 30.0
bolting_date = 500 
flowering_date = 1000

expected_first_axis_table_index_axis_list = [1, 4, 5, 6, 6, 1, 4, 5, 6, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 1, 4, 5, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 5, 6, 1, 4, 5, 7, 1, 4,5, 6, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 5, 6, 1, 4, 5, 6, 6, 7, 1, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 1, 4, 5, 1, 4, 5,6, 6, 1, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 7, 1, 4, 5, 7, 1, 5, 6, 7, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 7, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 7, 1, 4, 5, 6, 7, 1, 5, 6,1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 7, 1, 4, 5, 6,1, 4, 5, 6, 6, 7, 7, 1, 4, 5, 6, 1, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 7, 1, 4, 6, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 5, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 1, 4, 5, 6, 6, 7, 1, 4,5, 6, 6, 7, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 7, 1, 5, 6, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6]
expected_first_axis_table_index_plt_list = [1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5,6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 27, 27, 27, 28, 28, 28, 28, 28, 28, 29, 29, 29, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 33, 33, 33, 34, 34, 34, 34, 34, 35, 35, 35, 36, 36, 36, 36, 36, 37, 37, 37, 38, 38, 38, 38, 38, 39, 39, 39, 39, 39, 39, 40, 40, 40, 40, 41, 41, 41, 41, 42, 42, 42, 42, 42, 42, 43, 43, 43, 43, 44, 44, 44, 44, 44, 45, 45, 45, 45, 45, 45, 46, 46, 46, 46, 46, 47, 47, 47, 47, 48, 48, 48, 48, 48, 49, 49, 49, 49, 49, 50, 50, 50, 50, 50, 51, 51, 51, 52, 52, 52, 52, 52, 52, 53, 53, 53, 53, 53, 54, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 56, 56, 56, 56, 56, 56, 57, 57, 57, 57, 57, 57, 58, 58, 58, 58, 58, 58, 59, 59, 59, 59, 59, 60, 60, 60, 60, 60, 61, 61, 62, 62, 62, 62, 62, 63, 63, 63, 63, 63, 63, 64, 64, 64, 64, 65, 65, 65, 65, 65, 66, 66, 66, 66, 67, 67, 67, 67, 68, 68, 68, 68, 68, 68, 68, 69, 69, 69, 69, 70, 70, 71, 71, 71, 71, 71, 72, 72, 72, 72, 72, 73, 73, 73, 73, 73, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 76, 76, 76, 76, 77, 77, 77, 77, 77, 78, 78, 78, 78, 78, 78, 79, 79, 79, 79, 79, 80, 80, 80, 80, 80, 81, 81, 81, 81, 81, 82, 82, 82, 82, 83, 83, 83, 83, 83, 83, 84, 84, 84, 84, 84, 84, 85, 85, 85, 85, 86, 86, 86, 86, 86, 87, 87, 87, 87, 87, 88, 88, 88, 88, 88, 89, 89, 89, 89, 89, 90, 90, 90, 90, 91, 91, 91, 91, 91, 92, 92, 92, 92, 92, 93, 93, 93, 94, 94, 94, 94, 95, 95, 95, 95, 95, 96, 96, 96, 96, 96, 97, 97, 97, 97, 97, 98, 98, 98, 98, 98, 99, 99, 99, 99, 99, 100, 100, 100, 100, 100]
expected_first_axis_table_N_phyt_list = [11, 9, 8, 7, 7, 11, 8, 7, 8, 11, 8, 8, 7, 7, 6, 12, 9, 8, 8, 8, 11,8, 7, 7, 11, 8, 7, 7, 6, 11, 8, 8, 7, 7, 11, 9, 8, 7, 7, 7, 11, 8, 8, 7, 7, 12,9, 9, 8, 8, 11, 8, 8, 7, 11, 8, 7, 7, 7, 11, 8, 8, 7, 11, 8, 7, 7, 7, 10, 6, 6,11, 8, 8, 6, 11, 9, 8, 7, 7, 6, 11, 8, 8, 7, 7, 11, 8, 8, 7, 7, 10, 7, 7, 6, 11, 8, 7, 7, 7, 11, 8, 8, 7, 7, 11, 8, 8, 7, 7, 11, 9, 8, 7, 11, 8, 7, 7, 7, 11, 8, 8, 7, 7, 11, 8, 7, 11, 8, 7, 7, 7, 6, 11, 7, 7, 11, 8, 7, 7, 7, 11, 8, 7, 7, 7, 7, 11, 8, 8, 7, 11, 9, 7, 11, 8, 7, 7, 7, 10, 6, 6, 11, 8, 7, 7, 7, 10, 7, 7, 11, 8, 8, 7, 8, 11, 8, 8, 7, 7, 7, 11, 8, 8, 6, 11, 8, 7, 7, 11, 9, 7, 7, 7, 7, 11, 8, 7, 7, 10, 7, 7, 6, 6, 11, 8, 7, 7, 7, 6, 11, 8, 8, 7, 6, 10, 8, 7, 6, 11,8, 8, 7, 7, 11, 8, 7, 7, 6, 11, 9, 7, 7, 7, 11, 8, 7, 11, 8, 7, 7, 7, 7, 11, 8,7, 7, 7, 10, 7, 7, 6, 6, 5, 11, 8, 8, 7, 7, 11, 8, 8, 7, 7, 6, 11, 8, 8, 7, 7, 7, 11, 8, 7, 7, 7, 6, 11, 9, 7, 7, 7, 11, 9, 8, 7, 7, 11, 8, 11, 9, 7, 7, 7, 10,7, 7, 7, 6, 5, 11, 9, 7, 7, 11, 8, 8, 7, 7, 11, 8, 8, 7, 11, 8, 8, 7, 11, 8, 8,7, 7, 7, 6, 12, 9, 8, 8, 11, 8, 11, 8, 8, 7, 7, 11, 8, 7, 7, 6, 11, 8, 7, 7, 6,11, 8, 7, 7, 8, 11, 8, 7, 7, 7, 11, 7, 8, 7, 10, 7, 7, 6, 7, 12, 9, 9, 8, 8, 8,11, 8, 8, 7, 7, 11, 9, 7, 7, 7, 10, 7, 7, 6, 6, 11, 8, 8, 7, 10, 7, 7, 6, 6, 6,11, 8, 8, 7, 7, 7, 11, 8, 8, 7, 10, 8, 6, 6, 6, 11, 8, 7, 7, 7, 11, 8, 8, 7, 7,11, 8, 8, 7, 7, 11, 8, 7, 7, 11, 9, 7, 7, 7, 12, 9, 8, 8, 7, 12, 9, 8, 11, 9, 8, 7, 11, 8, 8, 7, 8, 11, 8, 8, 7, 7, 10, 8, 7, 6, 6, 10, 8, 6, 6, 6, 11, 8, 7, 7, 7, 10, 7, 7, 6, 6]
expected_first_axis_table_T_stop_axis_list = [585.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 555.0, numpy.nan, numpy.nan, numpy.nan, 564.0, numpy.nan, numpy.nan,numpy.nan, numpy.nan, numpy.nan, 574.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 633.0, numpy.nan, numpy.nan, numpy.nan, 614.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 519.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 620.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 656.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 515.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 645.0, numpy.nan, numpy.nan, numpy.nan, 660.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 570.0, numpy.nan, numpy.nan, numpy.nan, 538.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 664.0, numpy.nan, numpy.nan, 500.0, numpy.nan, numpy.nan, numpy.nan, 654.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 685.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan,696.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 679.0, numpy.nan, numpy.nan, numpy.nan, 517.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 578.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 694.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 582.0, numpy.nan, numpy.nan, numpy.nan, 591.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 610.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 568.0, numpy.nan, numpy.nan, 509.0, numpy.nan, numpy.nan,numpy.nan, numpy.nan, numpy.nan, 559.0, numpy.nan, numpy.nan, 557.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 677.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 700.0, numpy.nan, numpy.nan, numpy.nan, 631.0, numpy.nan, numpy.nan, 635.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 511.0, numpy.nan, numpy.nan, 532.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 536.0, numpy.nan, numpy.nan, 673.0, numpy.nan, numpy.nan, numpy.nan,numpy.nan, 662.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 576.0, numpy.nan, numpy.nan, numpy.nan, 666.0, numpy.nan, numpy.nan, numpy.nan, 603.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 641.0, numpy.nan, numpy.nan, numpy.nan, 505.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 547.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 530.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 698.0, numpy.nan, numpy.nan, numpy.nan, 658.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 566.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 526.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 702.0, numpy.nan, numpy.nan, 553.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 704.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan,675.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 706.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 580.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 595.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 601.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 622.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 549.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 681.0, numpy.nan, 637.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 597.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 687.0, 998.0, 996.0, 994.0, 690.0, 992.0, 990.0, 988.0, 986.0, 589.0, 984.0, 982.0, 979.0, 692.0, 977.0, 975.0, 973.0, 507.0, 971.0, 969.0, 967.0, 965.0, 963.0, 961.0, 669.0, 958.0, 956.0, 954.0, 524.0, 952.0, 522.0, 950.0, 948.0, 946.0, 944.0, 599.0, 942.0, 940.0, 937.0, 935.0,534.0, 933.0, 931.0, 929.0, 927.0, 503.0, 925.0, 923.0, 921.0, 919.0, 618.0, 916.0, 914.0, 912.0, 910.0, 612.0, 908.0, 906.0, 904.0, 543.0, 902.0, 900.0, 898.0, 895.0, 593.0, 893.0, 891.0, 889.0, 887.0, 885.0, 561.0, 883.0, 881.0, 879.0, 877.0, 648.0, 874.0, 872.0, 870.0, 868.0, 551.0, 866.0, 864.0, 862.0, 860.0, 540.0, 858.0, 856.0, 853.0, 643.0, 851.0, 849.0, 847.0, 845.0, 843.0, 627.0, 841.0, 839.0, 837.0, 835.0, 832.0, 501.0, 830.0, 828.0, 826.0, 639.0, 824.0, 822.0, 820.0, 818.0, 650.0, 816.0, 814.0, 811.0, 809.0, 572.0, 807.0, 805.0, 803.0, 801.0,624.0, 799.0, 797.0, 795.0, 793.0, 652.0, 790.0, 788.0, 786.0, 587.0, 784.0, 782.0, 780.0, 778.0, 545.0, 776.0, 774.0, 772.0, 769.0, 671.0, 767.0, 765.0, 528.0, 763.0, 761.0, 759.0, 513.0, 757.0, 755.0, 753.0, 751.0, 606.0, 748.0, 746.0, 744.0, 742.0, 616.0, 740.0, 738.0, 736.0, 734.0, 608.0, 732.0, 729.0, 727.0, 725.0, 629.0, 723.0, 721.0, 719.0, 717.0, 683.0, 715.0, 713.0, 711.0, 708.0]
expected_first_axis_table_T_em_leaf1_list = [-1.0023898242, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 5.5714255114500002, numpy.nan, numpy.nan, numpy.nan, 3.9071947677800001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 3.0046434736299998, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -6.8729381113299999, numpy.nan, numpy.nan, numpy.nan, -4.3096211335600003, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 10.276044586999999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -4.8969109509399997, numpy.nan, numpy.nan,numpy.nan, numpy.nan, numpy.nan, -8.5350706385200006, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 11.1583679247, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -7.66730959684, numpy.nan, numpy.nan, numpy.nan, -8.6494058820900008, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 3.40131761051, numpy.nan, numpy.nan, numpy.nan, 7.8066732816700002, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -8.7488692974299997, numpy.nan, numpy.nan, 14.856505364, numpy.nan, numpy.nan, numpy.nan, -8.4708982306300005, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -11.896150929499999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -12.910069291099999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -11.6148386736, numpy.nan, numpy.nan, numpy.nan, 10.489683270700001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 1.09211983091, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -12.785164757800001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 0.20778241302600001, numpy.nan, numpy.nan, numpy.nan, -1.24856774897, numpy.nan, numpy.nan, numpy.nan, numpy.nan,-3.5999996847000002, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 3.6755389248000001, numpy.nan, numpy.nan, 12.1973476168, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 4.5957103336099996, numpy.nan, numpy.nan, 5.3443872199399998, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -11.415036800199999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -13.422524423500001, numpy.nan, numpy.nan, numpy.nan, -6.7922198826200004, numpy.nan, numpy.nan, -6.9708914934199999, numpy.nan,numpy.nan, numpy.nan, numpy.nan, 12.053231909000001, numpy.nan, numpy.nan, 8.7790576981299999, numpy.nan, numpy.nan, numpy.nan,numpy.nan, 8.3579103589100008, numpy.nan, numpy.nan, -10.8232511623, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -8.6834248536800001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 1.4548934690599999, numpy.nan, numpy.nan, numpy.nan, -9.6184808117399996, numpy.nan, numpy.nan, numpy.nan, -3.10327204278, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -7.3829265284799996, numpy.nan, numpy.nan, numpy.nan, 13.332247556700001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 6.6978771664699996, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 8.9183895103000008, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -13.003940532, numpy.nan, numpy.nan, numpy.nan, -8.6354690950599995, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 3.7659976912399999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 10.106753143700001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -14.1880056572, numpy.nan, numpy.nan, 5.6607548061199999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -14.4132081605, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -11.065578908699999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -14.560646655099999, numpy.nan,numpy.nan, numpy.nan, numpy.nan, 0.417440013153, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -1.74454166089, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -2.9394725790899998, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -4.9824996010299998, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 6.5963362644899997, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -11.6399343447,numpy.nan, -7.0267745005900002, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -1.87301169757, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -12.1212200569, numpy.nan, numpy.nan, numpy.nan, -12.372099480699999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -1.0782040533699999, numpy.nan, numpy.nan, numpy.nan, -12.381324637600001, numpy.nan, numpy.nan, numpy.nan, 13.3222263146, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -9.7608688013599991, numpy.nan, numpy.nan, numpy.nan, 10.195515823199999, numpy.nan, 10.239264390300001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -2.58549380515, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 8.66118708622, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 14.152493382799999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -4.61384022855, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -3.9515457446400002, numpy.nan, numpy.nan, numpy.nan,7.1798690051899996, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -1.70193234605, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 4.5451454469500003, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -7.6958533671499998, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 6.2843986199900002, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 7.4188845062400004, numpy.nan, numpy.nan, numpy.nan, -7.5546508161999997, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -6.3879879581300001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 14.3579907438, numpy.nan, numpy.nan, numpy.nan, -7.1749079157100004, numpy.nan, numpy.nan, numpy.nan, numpy.nan,-7.7862987494200002, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 3.0521080291699998, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -5.0550093754300001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -7.8228099638300002, numpy.nan, numpy.nan, numpy.nan, -1.0076410061600001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 6.9979462832100001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -10.5426060281, numpy.nan, numpy.nan, 9.3940185089200003, numpy.nan, numpy.nan, numpy.nan, 11.670752503899999,numpy.nan, numpy.nan, numpy.nan, numpy.nan, -3.2785189620600002, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -4.3242231344500004, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -3.4608867569199999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -6.5208869545899999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -11.664797378399999, numpy.nan, numpy.nan, numpy.nan, numpy.nan]
expected_first_axis_table_id_dim_list = [111, 409, 508, 607, 607, 111, 408, 507, 608, 111, 408, 508, 607, 607, 706, 112, 409, 508, 608, 608, 111, 408, 507, 607, 111, 408, 507, 607, 706, 111, 408, 508, 607, 607, 111, 409, 508, 607, 607, 707, 111, 408, 508, 607, 607, 112, 409, 509, 608, 608, 111, 408, 508, 607, 111, 408, 507, 607, 607, 111, 408, 508, 607, 111, 408, 507, 607, 607, 110, 506, 606, 111, 408, 508, 706, 111, 409, 508, 607, 607, 706, 111, 408, 508, 607, 607, 111, 408, 508, 607, 607, 110, 407, 507, 606, 111, 408, 507, 607, 607, 111, 408, 508, 607, 607, 111, 408, 508, 607, 607, 111, 409, 508, 607, 111, 408, 507, 607, 607, 111, 408, 508, 607, 607, 111, 508, 607, 111, 408, 507, 607, 607, 706, 111, 507, 607, 111, 408, 507, 607, 607, 111, 408, 507, 607, 607, 707, 111, 408, 508, 607, 111, 409, 507, 111, 408, 507, 607, 607, 110, 506, 606, 111, 408, 507, 607, 607, 110, 407, 507, 111, 408, 508, 607, 608, 111, 408, 508, 607, 607, 707, 111, 408, 508, 706, 111, 508, 607, 707, 111, 409, 507, 607, 607, 707, 111, 408, 507, 607, 110, 407, 507, 606, 606, 111, 408, 507, 607, 607, 706, 111, 408, 508, 607, 706, 110, 408, 507, 606, 111, 408, 508, 607, 607, 111, 408, 507, 607, 706, 111, 409, 507, 607, 707, 111, 508, 607, 111, 408, 507, 607, 607, 707, 111, 408, 507, 607, 607, 110, 407, 507, 606, 606, 705, 111, 408, 508, 607, 607, 111, 408, 508, 607, 607, 706, 111, 408, 508, 607, 607, 707, 111, 408, 507, 607, 607, 706, 111, 409, 507, 607, 607, 111, 409, 508, 607, 607, 111, 608, 111, 409, 507, 607, 607, 110, 407, 507, 607, 606, 705, 111, 409, 507, 607, 111, 408, 508, 607, 607, 111, 408, 508, 707, 111, 408, 508, 607, 111, 408, 508, 607, 607, 707, 706, 112, 409, 508, 608, 111, 608, 111, 408, 508, 607, 607, 111, 408, 507, 607, 706, 111, 408, 607, 607, 706, 111, 408, 507, 607, 608, 111, 408, 507, 607, 607, 111, 507, 608, 707, 110, 407, 507, 606, 607, 112, 409, 509, 608, 608, 708, 111, 408, 508, 607, 607, 111, 409, 507, 607, 607, 110, 407, 507, 606, 606, 111, 408, 508, 607, 110, 407, 507, 606, 606, 706, 111, 408, 508, 607, 607, 707, 111, 408, 508, 607, 110, 408, 506, 606, 606, 111, 408, 507, 607, 607, 111, 408, 508, 607, 607, 111, 408, 508, 607, 607, 111, 408, 507, 607, 111, 409, 507, 607, 607, 112, 409, 508, 608, 707, 112, 509, 608, 111, 409, 508, 607, 111, 408, 508, 607, 608, 111, 408, 508, 607, 607, 110, 408, 507, 606, 606, 110, 408, 506, 606, 606, 111, 408, 507, 607, 607, 110, 407, 507, 606, 606]
expected_first_axis_table_id_phen_list = [111, 409, 508, 607, 607, 111, 408, 507, 608, 111, 408, 508, 607, 607, 706, 112, 409, 508, 608, 608, 111, 408, 507, 607, 111, 408, 507, 607, 706, 111, 408, 508, 607, 607, 111, 409, 508, 607, 607, 707, 111, 408, 508, 607, 607, 112, 409, 509, 608, 608, 111, 408, 508, 607, 111, 408, 507, 607, 607, 111, 408, 508, 607, 111, 408, 507, 607, 607, 110, 506, 606, 111, 408, 508, 706, 111, 409, 508, 607, 607, 706, 111, 408, 508, 607, 607, 111, 408, 508, 607, 607, 110, 407, 507, 606, 111, 408, 507, 607, 607, 111, 408, 508, 607, 607, 111, 408, 508, 607, 607, 111, 409, 508, 607, 111, 408, 507, 607, 607, 111, 408, 508, 607, 607, 111, 508, 607, 111, 408, 507, 607, 607, 706, 111, 507, 607, 111, 408, 507, 607, 607, 111, 408, 507, 607, 607, 707, 111, 408, 508, 607, 111, 409, 507, 111, 408, 507, 607, 607, 110, 506, 606, 111, 408, 507, 607, 607, 110, 407, 507, 111, 408, 508, 607, 608, 111, 408, 508, 607, 607, 707, 111, 408, 508, 706, 111, 508, 607, 707, 111, 409, 507, 607, 607, 707, 111, 408, 507, 607, 110, 407, 507, 606, 606, 111, 408, 507, 607, 607, 706, 111, 408, 508, 607, 706, 110, 408, 507, 606, 111, 408, 508, 607, 607, 111, 408, 507, 607, 706, 111, 409, 507, 607, 707, 111, 508, 607, 111, 408, 507, 607, 607, 707, 111, 408, 507, 607, 607, 110, 407, 507, 606, 606, 705, 111, 408, 508, 607, 607, 111, 408, 508, 607, 607, 706, 111, 408, 508, 607, 607, 707, 111, 408, 507, 607, 607, 706, 111, 409, 507, 607, 607, 111, 409, 508, 607, 607, 111, 608, 111, 409, 507, 607, 607, 110, 407, 507, 607, 606, 705, 111, 409, 507, 607, 111, 408, 508, 607, 607, 111, 408, 508, 707, 111, 408, 508, 607, 111, 408, 508, 607, 607, 707, 706, 112, 409, 508, 608, 111, 608, 111, 408, 508, 607, 607, 111, 408, 507, 607, 706, 111, 408, 607, 607, 706, 111, 408, 507, 607, 608, 111, 408, 507, 607, 607, 111, 507, 608, 707, 110, 407, 507, 606, 607, 112, 409, 509, 608, 608, 708, 111, 408, 508, 607, 607, 111, 409, 507, 607, 607, 110, 407, 507, 606, 606, 111, 408, 508, 607, 110, 407, 507, 606, 606, 706, 111, 408, 508, 607, 607, 707, 111, 408, 508, 607, 110, 408, 506, 606, 606, 111, 408, 507, 607, 607, 111, 408, 508, 607, 607, 111, 408, 508, 607, 607, 111, 408, 507, 607, 111, 409, 507, 607, 607, 112, 409, 508, 608, 707, 112, 509, 608, 111, 409, 508, 607, 111, 408, 508, 607, 608, 111, 408, 508, 607, 607, 110, 408, 507, 606, 606, 110, 408, 506, 606, 606, 111, 408, 507, 607, 607, 110, 407, 507, 606, 606]
expected_first_axis_table_id_ear_list = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]

expected_first_parameters_n_cohort_list = [1, 1, 1, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7]
expected_first_parameters_id_axis_list = [111, 110, 112, 408, 409, 407, 507, 508, 506, 509, 607, 606, 608, 706, 707, 705, 708]
expected_first_parameters_frequency_list = [79, 15, 6, 62, 19, 9, 45, 45, 4, 3, 120, 22,16, 15, 13, 2, 1]
expected_first_parameters_nff_list = [11, 10, 12, 8, 9, 7, 7, 8, 6, 9, 7, 6, 8, 6, 7, 5, 8]
expected_first_parameters_a_cohort_list = [numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan,numpy.nan, numpy.nan, numpy.nan]
expected_first_parameters_TT_col_0_list = [numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan,numpy.nan, numpy.nan, numpy.nan]
expected_first_parameters_TT_col_break_list = [numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan]
expected_first_parameters_TT_col_nff_list = [numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan]
expected_first_parameters_dTT_MS_cohort_list = [numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan,numpy.nan, numpy.nan, numpy.nan, numpy.nan]

linear_user_parameters_n_cohort_list = [1, 1, 1, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7]
linear_user_parameters_id_axis_list = [111, 110, 112, 408, 409, 407, 507, 508, 506, 509, 607, 606, 608, 706, 707, 705, 708]
linear_user_parameters_frequency_list = [79, 15, 6, 62, 19, 9, 45, 45, 4, 3, 120, 22,16, 15, 13, 2, 1]
linear_user_parameters_nff_list = [11, 10, 12, 8, 9, 7, 7, 8, 6, 9, 7, 6, 8, 6, 7, 5, 8]
linear_user_parameters_a_cohort_list = [0.0102, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan,numpy.nan, numpy.nan, numpy.nan]
linear_user_parameters_TT_col_0_list = [-0.8, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan,numpy.nan, numpy.nan, numpy.nan]
linear_user_parameters_TT_col_break_list = [0.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan,numpy.nan, numpy.nan, numpy.nan]
linear_user_parameters_TT_col_nff_list = [1078.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan,numpy.nan, numpy.nan, numpy.nan]
linear_user_parameters_dTT_MS_cohort_list = [0.0, numpy.nan, numpy.nan, 139.0, numpy.nan, numpy.nan, 152.6, numpy.nan, numpy.nan, numpy.nan, 175.5, numpy.nan, numpy.nan, 220.0, numpy.nan, numpy.nan, numpy.nan]

bilinear_user_parameters_n_cohort_list = [1, 1, 1, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7]
bilinear_user_parameters_id_axis_list = [111, 110, 112, 408, 409, 407, 507, 508, 506, 509, 607, 606, 608, 706, 707, 705, 708]
bilinear_user_parameters_frequency_list = [79, 15, 6, 62, 19, 9, 45, 45, 4, 3, 120, 22,16, 15, 13, 2, 1]
bilinear_user_parameters_nff_list = [11, 10, 12, 8, 9, 7, 7, 8, 6, 9, 7, 6, 8, 6, 7, 5, 8]
bilinear_user_parameters_a_cohort_list = [0.01124, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan,numpy.nan, numpy.nan, numpy.nan]
bilinear_user_parameters_TT_col_0_list = [-0.7, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan,numpy.nan, numpy.nan, numpy.nan]
bilinear_user_parameters_TT_col_break_list = [378.8, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan,numpy.nan, numpy.nan, numpy.nan]
bilinear_user_parameters_TT_col_nff_list = [1462.8, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan,numpy.nan, numpy.nan, numpy.nan]
bilinear_user_parameters_dTT_MS_cohort_list = [0.0, numpy.nan, numpy.nan, 139.0, numpy.nan, numpy.nan, 152.6, numpy.nan, numpy.nan, numpy.nan, 175.5, numpy.nan, numpy.nan, 220.0, numpy.nan, numpy.nan, numpy.nan]

linear_expected_second_axis_table_index_axis_list = [1, 4, 5, 6, 6, 1, 4, 5, 6, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 1, 4, 5, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 5, 6, 1, 4, 5, 7, 1, 4,5, 6, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 5, 6, 1, 4, 5, 6, 6, 7, 1, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 1, 4, 5, 1, 4, 5,6, 6, 1, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 7, 1, 4, 5, 7, 1, 5, 6, 7, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 7, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 7, 1, 4, 5, 6, 7, 1, 5, 6,1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 7, 1, 4, 5, 6,1, 4, 5, 6, 6, 7, 7, 1, 4, 5, 6, 1, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 7, 1, 4, 6, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 5, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 7, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 1, 4, 5, 6, 6, 7, 1, 4,5, 6, 6, 7, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 7, 1, 5, 6, 1, 4, 5, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6, 1, 4, 5, 6, 6]
linear_expected_second_axis_table_index_plt_list = [1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5,6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 27, 27, 27, 28, 28, 28, 28, 28, 28, 29, 29, 29, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 33, 33, 33, 34, 34, 34, 34, 34, 35, 35, 35, 36, 36, 36, 36, 36, 37, 37, 37, 38, 38, 38, 38, 38, 39, 39, 39, 39, 39, 39, 40, 40, 40, 40, 41, 41, 41, 41, 42, 42, 42, 42, 42, 42, 43, 43, 43, 43, 44, 44, 44, 44, 44, 45, 45, 45, 45, 45, 45, 46, 46, 46, 46, 46, 47, 47, 47, 47, 48, 48, 48, 48, 48, 49, 49, 49, 49, 49, 50, 50, 50, 50, 50, 51, 51, 51, 52, 52, 52, 52, 52, 52, 53, 53, 53, 53, 53, 54, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 56, 56, 56, 56, 56, 56, 57, 57, 57, 57, 57, 57, 58, 58, 58, 58, 58, 58, 59, 59, 59, 59, 59, 60, 60, 60, 60, 60, 61, 61, 62, 62, 62, 62, 62, 63, 63, 63, 63, 63, 63, 64, 64, 64, 64, 65, 65, 65, 65, 65, 66, 66, 66, 66, 67, 67, 67, 67, 68, 68, 68, 68, 68, 68, 68, 69, 69, 69, 69, 70, 70, 71, 71, 71, 71, 71, 72, 72, 72, 72, 72, 73, 73, 73, 73, 73, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 76, 76, 76, 76, 77, 77, 77, 77, 77, 78, 78, 78, 78, 78, 78, 79, 79, 79, 79, 79, 80, 80, 80, 80, 80, 81, 81, 81, 81, 81, 82, 82, 82, 82, 83, 83, 83, 83, 83, 83, 84, 84, 84, 84, 84, 84, 85, 85, 85, 85, 86, 86, 86, 86, 86, 87, 87, 87, 87, 87, 88, 88, 88, 88, 88, 89, 89, 89, 89, 89, 90, 90, 90, 90, 91, 91, 91, 91, 91, 92, 92, 92, 92, 92, 93, 93, 93, 94, 94, 94, 94, 95, 95, 95, 95, 95, 96, 96, 96, 96, 96, 97, 97, 97, 97, 97, 98, 98, 98, 98, 98, 99, 99, 99, 99, 99, 100, 100, 100, 100, 100]
linear_expected_second_axis_table_N_phyt_list = [11, 9, 8, 7, 7, 11, 8, 7, 8, 11, 8, 8, 7, 7, 6, 12, 9, 8, 8, 8, 11,8, 7, 7, 11, 8, 7, 7, 6, 11, 8, 8, 7, 7, 11, 9, 8, 7, 7, 7, 11, 8, 8, 7, 7, 12,9, 9, 8, 8, 11, 8, 8, 7, 11, 8, 7, 7, 7, 11, 8, 8, 7, 11, 8, 7, 7, 7, 10, 6, 6,11, 8, 8, 6, 11, 9, 8, 7, 7, 6, 11, 8, 8, 7, 7, 11, 8, 8, 7, 7, 10, 7, 7, 6, 11, 8, 7, 7, 7, 11, 8, 8, 7, 7, 11, 8, 8, 7, 7, 11, 9, 8, 7, 11, 8, 7, 7, 7, 11, 8, 8, 7, 7, 11, 8, 7, 11, 8, 7, 7, 7, 6, 11, 7, 7, 11, 8, 7, 7, 7, 11, 8, 7, 7, 7, 7, 11, 8, 8, 7, 11, 9, 7, 11, 8, 7, 7, 7, 10, 6, 6, 11, 8, 7, 7, 7, 10, 7, 7, 11, 8, 8, 7, 8, 11, 8, 8, 7, 7, 7, 11, 8, 8, 6, 11, 8, 7, 7, 11, 9, 7, 7, 7, 7, 11, 8, 7, 7, 10, 7, 7, 6, 6, 11, 8, 7, 7, 7, 6, 11, 8, 8, 7, 6, 10, 8, 7, 6, 11,8, 8, 7, 7, 11, 8, 7, 7, 6, 11, 9, 7, 7, 7, 11, 8, 7, 11, 8, 7, 7, 7, 7, 11, 8,7, 7, 7, 10, 7, 7, 6, 6, 5, 11, 8, 8, 7, 7, 11, 8, 8, 7, 7, 6, 11, 8, 8, 7, 7, 7, 11, 8, 7, 7, 7, 6, 11, 9, 7, 7, 7, 11, 9, 8, 7, 7, 11, 8, 11, 9, 7, 7, 7, 10,7, 7, 7, 6, 5, 11, 9, 7, 7, 11, 8, 8, 7, 7, 11, 8, 8, 7, 11, 8, 8, 7, 11, 8, 8,7, 7, 7, 6, 12, 9, 8, 8, 11, 8, 11, 8, 8, 7, 7, 11, 8, 7, 7, 6, 11, 8, 7, 7, 6,11, 8, 7, 7, 8, 11, 8, 7, 7, 7, 11, 7, 8, 7, 10, 7, 7, 6, 7, 12, 9, 9, 8, 8, 8,11, 8, 8, 7, 7, 11, 9, 7, 7, 7, 10, 7, 7, 6, 6, 11, 8, 8, 7, 10, 7, 7, 6, 6, 6,11, 8, 8, 7, 7, 7, 11, 8, 8, 7, 10, 8, 6, 6, 6, 11, 8, 7, 7, 7, 11, 8, 8, 7, 7,11, 8, 8, 7, 7, 11, 8, 7, 7, 11, 9, 7, 7, 7, 12, 9, 8, 8, 7, 12, 9, 8, 11, 9, 8, 7, 11, 8, 8, 7, 8, 11, 8, 8, 7, 7, 10, 8, 7, 6, 6, 10, 8, 6, 6, 6, 11, 8, 7, 7, 7, 10, 7, 7, 6, 6]
linear_expected_second_axis_table_T_stop_axis_list = [585.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 555.0, numpy.nan, numpy.nan, numpy.nan, 564.0, numpy.nan, numpy.nan,numpy.nan, numpy.nan, numpy.nan, 574.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 633.0, numpy.nan, numpy.nan, numpy.nan, 614.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 519.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 620.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 656.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 515.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 645.0, numpy.nan, numpy.nan, numpy.nan, 660.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 570.0, numpy.nan, numpy.nan, numpy.nan, 538.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 664.0, numpy.nan, numpy.nan, 500.0, numpy.nan, numpy.nan, numpy.nan, 654.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 685.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan,696.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 679.0, numpy.nan, numpy.nan, numpy.nan, 517.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 578.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 694.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 582.0, numpy.nan, numpy.nan, numpy.nan, 591.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 610.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 568.0, numpy.nan, numpy.nan, 509.0, numpy.nan, numpy.nan,numpy.nan, numpy.nan, numpy.nan, 559.0, numpy.nan, numpy.nan, 557.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 677.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 700.0, numpy.nan, numpy.nan, numpy.nan, 631.0, numpy.nan, numpy.nan, 635.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 511.0, numpy.nan, numpy.nan, 532.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 536.0, numpy.nan, numpy.nan, 673.0, numpy.nan, numpy.nan, numpy.nan,numpy.nan, 662.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 576.0, numpy.nan, numpy.nan, numpy.nan, 666.0, numpy.nan, numpy.nan, numpy.nan, 603.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 641.0, numpy.nan, numpy.nan, numpy.nan, 505.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 547.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 530.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 698.0, numpy.nan, numpy.nan, numpy.nan, 658.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 566.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 526.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 702.0, numpy.nan, numpy.nan, 553.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 704.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan,675.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 706.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 580.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 595.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 601.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 622.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 549.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 681.0, numpy.nan, 637.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 597.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 687.0, 998.0, 996.0, 994.0, 690.0, 992.0, 990.0, 988.0, 986.0, 589.0, 984.0, 982.0, 979.0, 692.0, 977.0, 975.0, 973.0, 507.0, 971.0, 969.0, 967.0, 965.0, 963.0, 961.0, 669.0, 958.0, 956.0, 954.0, 524.0, 952.0, 522.0, 950.0, 948.0, 946.0, 944.0, 599.0, 942.0, 940.0, 937.0, 935.0,534.0, 933.0, 931.0, 929.0, 927.0, 503.0, 925.0, 923.0, 921.0, 919.0, 618.0, 916.0, 914.0, 912.0, 910.0, 612.0, 908.0, 906.0, 904.0, 543.0, 902.0, 900.0, 898.0, 895.0, 593.0, 893.0, 891.0, 889.0, 887.0, 885.0, 561.0, 883.0, 881.0, 879.0, 877.0, 648.0, 874.0, 872.0, 870.0, 868.0, 551.0, 866.0, 864.0, 862.0, 860.0, 540.0, 858.0, 856.0, 853.0, 643.0, 851.0, 849.0, 847.0, 845.0, 843.0, 627.0, 841.0, 839.0, 837.0, 835.0, 832.0, 501.0, 830.0, 828.0, 826.0, 639.0, 824.0, 822.0, 820.0, 818.0, 650.0, 816.0, 814.0, 811.0, 809.0, 572.0, 807.0, 805.0, 803.0, 801.0,624.0, 799.0, 797.0, 795.0, 793.0, 652.0, 790.0, 788.0, 786.0, 587.0, 784.0, 782.0, 780.0, 778.0, 545.0, 776.0, 774.0, 772.0, 769.0, 671.0, 767.0, 765.0, 528.0, 763.0, 761.0, 759.0, 513.0, 757.0, 755.0, 753.0, 751.0, 606.0, 748.0, 746.0, 744.0, 742.0, 616.0, 740.0, 738.0, 736.0, 734.0, 608.0, 732.0, 729.0, 727.0, 725.0, 629.0, 723.0, 721.0, 719.0, 717.0, 683.0, 715.0, 713.0, 711.0, 708.0]
linear_expected_second_axis_table_T_em_leaf1_list = [-1.0023898242, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 5.5714255114500002, numpy.nan, numpy.nan, numpy.nan, 3.9071947677800001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 3.0046434736299998, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -6.8729381113299999, numpy.nan, numpy.nan, numpy.nan, -4.3096211335600003, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 10.276044586999999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -4.8969109509399997, numpy.nan, numpy.nan,numpy.nan, numpy.nan, numpy.nan, -8.5350706385200006, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 11.1583679247, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -7.66730959684, numpy.nan, numpy.nan, numpy.nan, -8.6494058820900008, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 3.40131761051, numpy.nan, numpy.nan, numpy.nan, 7.8066732816700002, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -8.7488692974299997, numpy.nan, numpy.nan, 14.856505364, numpy.nan, numpy.nan, numpy.nan, -8.4708982306300005, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -11.896150929499999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -12.910069291099999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -11.6148386736, numpy.nan, numpy.nan, numpy.nan, 10.489683270700001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 1.09211983091, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -12.785164757800001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 0.20778241302600001, numpy.nan, numpy.nan, numpy.nan, -1.24856774897, numpy.nan, numpy.nan, numpy.nan, numpy.nan,-3.5999996847000002, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 3.6755389248000001, numpy.nan, numpy.nan, 12.1973476168, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 4.5957103336099996, numpy.nan, numpy.nan, 5.3443872199399998, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -11.415036800199999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -13.422524423500001, numpy.nan, numpy.nan, numpy.nan, -6.7922198826200004, numpy.nan, numpy.nan, -6.9708914934199999, numpy.nan,numpy.nan, numpy.nan, numpy.nan, 12.053231909000001, numpy.nan, numpy.nan, 8.7790576981299999, numpy.nan, numpy.nan, numpy.nan,numpy.nan, 8.3579103589100008, numpy.nan, numpy.nan, -10.8232511623, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -8.6834248536800001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 1.4548934690599999, numpy.nan, numpy.nan, numpy.nan, -9.6184808117399996, numpy.nan, numpy.nan, numpy.nan, -3.10327204278, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -7.3829265284799996, numpy.nan, numpy.nan, numpy.nan, 13.332247556700001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 6.6978771664699996, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 8.9183895103000008, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -13.003940532, numpy.nan, numpy.nan, numpy.nan, -8.6354690950599995, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 3.7659976912399999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 10.106753143700001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -14.1880056572, numpy.nan, numpy.nan, 5.6607548061199999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -14.4132081605, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -11.065578908699999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -14.560646655099999, numpy.nan,numpy.nan, numpy.nan, numpy.nan, 0.417440013153, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -1.74454166089, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -2.9394725790899998, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -4.9824996010299998, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 6.5963362644899997, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -11.6399343447,numpy.nan, -7.0267745005900002, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -1.87301169757, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -12.1212200569, numpy.nan, numpy.nan, numpy.nan, -12.372099480699999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -1.0782040533699999, numpy.nan, numpy.nan, numpy.nan, -12.381324637600001, numpy.nan, numpy.nan, numpy.nan, 13.3222263146, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -9.7608688013599991, numpy.nan, numpy.nan, numpy.nan, 10.195515823199999, numpy.nan, 10.239264390300001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -2.58549380515, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 8.66118708622, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 14.152493382799999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -4.61384022855, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -3.9515457446400002, numpy.nan, numpy.nan, numpy.nan,7.1798690051899996, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -1.70193234605, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 4.5451454469500003, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -7.6958533671499998, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 6.2843986199900002, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 7.4188845062400004, numpy.nan, numpy.nan, numpy.nan, -7.5546508161999997, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -6.3879879581300001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 14.3579907438, numpy.nan, numpy.nan, numpy.nan, -7.1749079157100004, numpy.nan, numpy.nan, numpy.nan, numpy.nan,-7.7862987494200002, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 3.0521080291699998, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -5.0550093754300001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -7.8228099638300002, numpy.nan, numpy.nan, numpy.nan, -1.0076410061600001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 6.9979462832100001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -10.5426060281, numpy.nan, numpy.nan, 9.3940185089200003, numpy.nan, numpy.nan, numpy.nan, 11.670752503899999,numpy.nan, numpy.nan, numpy.nan, numpy.nan, -3.2785189620600002, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -4.3242231344500004, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -3.4608867569199999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -6.5208869545899999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -11.664797378399999, numpy.nan, numpy.nan, numpy.nan, numpy.nan]
linear_expected_second_axis_table_id_dim_list = [111, 409, 508, 607, 607, 111, 408, 507, 608, 111, 408, 508, 607, 607, 706, 112, 409, 508, 608, 608, 111, 408, 507, 607, 111, 408, 507, 607, 706, 111, 408, 508, 607, 607, 111, 409, 508, 607, 607, 707, 111, 408, 508, 607, 607, 112, 409, 509, 608, 608, 111, 408, 508, 607, 111, 408, 507, 607, 607, 111, 408, 508, 607, 111, 408, 507, 607, 607, 110, 506, 606, 111, 408, 508, 706, 111, 409, 508, 607, 607, 706, 111, 408, 508, 607, 607, 111, 408, 508, 607, 607, 110, 407, 507, 606, 111, 408, 507, 607, 607, 111, 408, 508, 607, 607, 111, 408, 508, 607, 607, 111, 409, 508, 607, 111, 408, 507, 607, 607, 111, 408, 508, 607, 607, 111, 508, 607, 111, 408, 507, 607, 607, 706, 111, 507, 607, 111, 408, 507, 607, 607, 111, 408, 507, 607, 607, 707, 111, 408, 508, 607, 111, 409, 507, 111, 408, 507, 607, 607, 110, 506, 606, 111, 408, 507, 607, 607, 110, 407, 507, 111, 408, 508, 607, 608, 111, 408, 508, 607, 607, 707, 111, 408, 508, 706, 111, 508, 607, 707, 111, 409, 507, 607, 607, 707, 111, 408, 507, 607, 110, 407, 507, 606, 606, 111, 408, 507, 607, 607, 706, 111, 408, 508, 607, 706, 110, 408, 507, 606, 111, 408, 508, 607, 607, 111, 408, 507, 607, 706, 111, 409, 507, 607, 707, 111, 508, 607, 111, 408, 507, 607, 607, 707, 111, 408, 507, 607, 607, 110, 407, 507, 606, 606, 705, 111, 408, 508, 607, 607, 111, 408, 508, 607, 607, 706, 111, 408, 508, 607, 607, 707, 111, 408, 507, 607, 607, 706, 111, 409, 507, 607, 607, 111, 409, 508, 607, 607, 111, 608, 111, 409, 507, 607, 607, 110, 407, 507, 607, 606, 705, 111, 409, 507, 607, 111, 408, 508, 607, 607, 111, 408, 508, 707, 111, 408, 508, 607, 111, 408, 508, 607, 607, 707, 706, 112, 409, 508, 608, 111, 608, 111, 408, 508, 607, 607, 111, 408, 507, 607, 706, 111, 408, 607, 607, 706, 111, 408, 507, 607, 608, 111, 408, 507, 607, 607, 111, 507, 608, 707, 110, 407, 507, 606, 607, 112, 409, 509, 608, 608, 708, 111, 408, 508, 607, 607, 111, 409, 507, 607, 607, 110, 407, 507, 606, 606, 111, 408, 508, 607, 110, 407, 507, 606, 606, 706, 111, 408, 508, 607, 607, 707, 111, 408, 508, 607, 110, 408, 506, 606, 606, 111, 408, 507, 607, 607, 111, 408, 508, 607, 607, 111, 408, 508, 607, 607, 111, 408, 507, 607, 111, 409, 507, 607, 607, 112, 409, 508, 608, 707, 112, 509, 608, 111, 409, 508, 607, 111, 408, 508, 607, 608, 111, 408, 508, 607, 607, 110, 408, 507, 606, 606, 110, 408, 506, 606, 606, 111, 408, 507, 607, 607, 110, 407, 507, 606, 606]
linear_expected_second_axis_table_id_phen_list = [111, 409, 508, 607, 607, 111, 408, 507, 608, 111, 408, 508, 607, 607, 706, 112, 409, 508, 608, 608, 111, 408, 507, 607, 111, 408, 507, 607, 706, 111, 408, 508, 607, 607, 111, 409, 508, 607, 607, 707, 111, 408, 508, 607, 607, 112, 409, 509, 608, 608, 111, 408, 508, 607, 111, 408, 507, 607, 607, 111, 408, 508, 607, 111, 408, 507, 607, 607, 110, 506, 606, 111, 408, 508, 706, 111, 409, 508, 607, 607, 706, 111, 408, 508, 607, 607, 111, 408, 508, 607, 607, 110, 407, 507, 606, 111, 408, 507, 607, 607, 111, 408, 508, 607, 607, 111, 408, 508, 607, 607, 111, 409, 508, 607, 111, 408, 507, 607, 607, 111, 408, 508, 607, 607, 111, 508, 607, 111, 408, 507, 607, 607, 706, 111, 507, 607, 111, 408, 507, 607, 607, 111, 408, 507, 607, 607, 707, 111, 408, 508, 607, 111, 409, 507, 111, 408, 507, 607, 607, 110, 506, 606, 111, 408, 507, 607, 607, 110, 407, 507, 111, 408, 508, 607, 608, 111, 408, 508, 607, 607, 707, 111, 408, 508, 706, 111, 508, 607, 707, 111, 409, 507, 607, 607, 707, 111, 408, 507, 607, 110, 407, 507, 606, 606, 111, 408, 507, 607, 607, 706, 111, 408, 508, 607, 706, 110, 408, 507, 606, 111, 408, 508, 607, 607, 111, 408, 507, 607, 706, 111, 409, 507, 607, 707, 111, 508, 607, 111, 408, 507, 607, 607, 707, 111, 408, 507, 607, 607, 110, 407, 507, 606, 606, 705, 111, 408, 508, 607, 607, 111, 408, 508, 607, 607, 706, 111, 408, 508, 607, 607, 707, 111, 408, 507, 607, 607, 706, 111, 409, 507, 607, 607, 111, 409, 508, 607, 607, 111, 608, 111, 409, 507, 607, 607, 110, 407, 507, 607, 606, 705, 111, 409, 507, 607, 111, 408, 508, 607, 607, 111, 408, 508, 707, 111, 408, 508, 607, 111, 408, 508, 607, 607, 707, 706, 112, 409, 508, 608, 111, 608, 111, 408, 508, 607, 607, 111, 408, 507, 607, 706, 111, 408, 607, 607, 706, 111, 408, 507, 607, 608, 111, 408, 507, 607, 607, 111, 507, 608, 707, 110, 407, 507, 606, 607, 112, 409, 509, 608, 608, 708, 111, 408, 508, 607, 607, 111, 409, 507, 607, 607, 110, 407, 507, 606, 606, 111, 408, 508, 607, 110, 407, 507, 606, 606, 706, 111, 408, 508, 607, 607, 707, 111, 408, 508, 607, 110, 408, 506, 606, 606, 111, 408, 507, 607, 607, 111, 408, 508, 607, 607, 111, 408, 508, 607, 607, 111, 408, 507, 607, 111, 409, 507, 607, 607, 112, 409, 508, 608, 707, 112, 509, 608, 111, 409, 508, 607, 111, 408, 508, 607, 608, 111, 408, 508, 607, 607, 110, 408, 507, 606, 606, 110, 408, 506, 606, 606, 111, 408, 507, 607, 607, 110, 407, 507, 606, 606]
linear_expected_second_axis_table_id_ear_list = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]

linear_expected_absolute_phen_table_id_phen_list = [111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 407.0, 407.0, 407.0, 407.0, 407.0, 407.0, 407.0, 407.0, 507.0, 507.0, 507.0, 507.0, 507.0, 507.0, 507.0, 507.0, 508.0, 508.0, 508.0, 508.0, 508.0, 508.0, 508.0, 508.0, 508.0, 506.0, 506.0, 506.0, 506.0, 506.0, 506.0, 506.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 607.0, 607.0, 607.0, 607.0, 607.0, 607.0, 607.0, 607.0, 606.0, 606.0, 606.0, 606.0, 606.0, 606.0, 606.0, 608.0, 608.0, 608.0, 608.0, 608.0, 608.0, 608.0, 608.0, 608.0, 706.0, 706.0, 706.0, 706.0, 706.0, 706.0, 706.0, 707.0, 707.0, 707.0, 707.0, 707.0, 707.0, 707.0, 707.0, 705.0, 705.0, 705.0, 705.0, 705.0, 705.0, 708.0, 708.0, 708.0, 708.0, 708.0, 708.0, 708.0, 708.0, 708.0]
linear_expected_absolute_phen_table_index_phytomer_list = [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0]
linear_expected_absolute_phen_table_TT_col_phytomer_list = [-0.80000000000000004, 97.239215686274505, 195.27843137254899, 293.31764705882352, 391.356862745098, 489.39607843137253, 587.43529411764712, 685.47450980392159, 783.51372549019607, 881.55294117647054, 979.59215686274513, 1077.6313725490195, -0.80000000000000004, 104.62901960784313, 210.05803921568625, 315.48705882352937, 420.91607843137251, 526.34509803921571, 631.7741176470588, 737.203137254902, 842.63215686274509, 948.06117647058829, 1053.4901960784314, -0.80000000000000004, 91.142483660130708, 183.0849673202614, 275.02745098039213, 366.96993464052281, 458.91241830065354, 550.85490196078433, 642.79738562091495, 734.73986928104569, 826.68235294117642, 918.62483660130715, 1010.5673202614379, 1102.5098039215686, 246.07254901960781, 367.43848039215686, 488.80441176470583, 610.17034313725492, 731.53627450980389, 852.90220588235286, 974.26813725490194, 1095.6340686274509, 1217.0, 246.07254901960781, 356.67668845315899, 467.2808278867102, 577.88496732026135, 688.48910675381262, 799.09324618736377, 909.69738562091493, 1020.3015250544662, 1130.9056644880175, 1241.5098039215686, 246.07254901960781, 381.27507002801121, 516.47759103641454, 651.68011204481797, 786.8826330532213, 922.08515406162462, 1057.2876750700282, 1192.4901960784314, 334.38627450980385, 462.41680672268899, 590.44733893557418, 718.47787114845937, 846.50840336134456, 974.53893557422975, 1102.5694677871147, 1230.5999999999999, 334.38627450980385, 449.47671568627447, 564.56715686274504, 679.6575980392156, 794.74803921568628, 909.83848039215673, 1024.9289215686274, 1140.0193627450981, 1255.1098039215685, 334.38627450980385, 479.67026143790844, 624.95424836601296, 770.23823529411766, 915.52222222222213, 1060.8062091503268, 1206.0901960784313, 334.38627450980385, 439.4122004357298, 544.43812636165569, 649.46405228758158, 754.48997821350758, 859.51590413943359, 964.54183006535936, 1069.5677559912854, 1174.5936819172114, 1279.6196078431371, 446.02352941176463, 561.37731092436968, 676.73109243697468, 792.08487394957979, 907.43865546218478, 1022.7924369747898, 1138.1462184873949, 1253.5, 446.02352941176463, 576.5179738562091, 707.01241830065351, 837.50686274509803, 968.00130718954256, 1098.4957516339869, 1228.9901960784314, 446.02352941176463, 550.02181372549012, 654.02009803921555, 758.0183823529411, 862.01666666666665, 966.01495098039209, 1070.0132352941175, 1174.011519607843, 1278.0098039215686, 568.77843137254911, 690.31535947712428, 811.85228758169933, 933.3892156862745, 1054.9261437908497, 1176.4630718954249, 1298.0, 568.77843137254911, 676.45434173669469, 784.13025210084038, 891.80616246498607, 999.48207282913165, 1107.1579831932772, 1214.8338935574229, 1322.5098039215686, 568.77843137254911, 709.72078431372552, 850.66313725490204, 991.60549019607845, 1132.5478431372549, 1273.4901960784314, 568.77843137254911, 666.05857843137267, 763.33872549019611, 860.61887254901967, 957.89901960784323, 1055.1791666666668, 1152.4593137254901, 1249.7394607843137, 1347.0196078431372]
linear_expected_absolute_phen_table_TT_em_phytomer_list = [-157.66274509803924, -59.65678084424502, 38.362027931450854, 136.40124361772538, 234.44045930399986, 332.47967499027436, 430.51889067654895, 528.55810636282342, 626.5973220490979, 724.63653773537237, 822.67575342164696, 920.71496910792132, -169.48643137254905, -71.447215686274532, 26.591999999999928, 124.63121568627446, 222.67043137254893, 320.70964705882346, 418.74886274509805, 516.78807843137247, 614.82729411764694, 712.86650980392142, 810.90572549019612, -147.90797385620914, -49.868758169934651, 48.170457516339837, 146.20967320261437, 244.24888888888884, 342.2881045751634, 440.32732026143799, 538.36653594771246, 636.40575163398694, 734.44496732026141, 832.484183006536, 930.52339869281036, -147.90797385620914, -194.98549019607847, -96.946274509803942, 1.0929411764705321, 99.132156862745063, 197.17137254901954, 295.21058823529404, 393.24980392156863, 491.2890196078431, 589.32823529411758, -177.76662309368194, -79.727407407407412, 18.311808278867062, 116.35102396514159, 214.39023965141607, 312.42945533769057, 410.46867102396516, 508.50788671023963, 606.54710239651411, 704.58631808278858, -217.12403361344542, -119.0848179271709, -21.045602240896404, 76.993613445378116, 175.03282913165259, 273.07204481792712, 371.11126050420171, 469.15047619047618, -205.64885154061628, -107.60963585434176, -9.570420168067244, 88.468795518207287, 186.50801120448176, 284.54722689075629, 382.58644257703088, 480.62565826330535, -184.94470588235296, -86.90549019607846, 11.133725490196042, 109.17294117647057, 207.21215686274505, 305.25137254901961, 403.29058823529419, 501.32980392156867, 599.36901960784314, -233.25437908496735, -135.21516339869282, -37.175947712418335, 60.863267973856182, 158.90248366013066, 256.94169934640519, 354.98091503267977, -168.84148148148151, -70.802265795206978, 27.236949891067496, 125.27616557734203, 223.3153812636165, 321.35459694989106, 419.39381263616565, 517.43302832244012, 615.4722440087146, 713.51145969498907, -185.36605042016808, -87.326834733893577, 10.712380952380926, 108.75159663865546, 206.79081232492993, 304.83002801120449, 402.86924369747908, 500.90845938375355, -209.59111111111116, -111.55189542483664, -13.512679738562161, 84.526535947712375, 182.56575163398685, 280.60496732026138, 378.64418300653597, -167.1972549019608, -69.158039215686287, 28.881176470588201, 126.92039215686273, 224.95960784313721, 322.99882352941177, 421.03803921568635, 519.07725490196083, 617.1164705882353, -195.25908496732023, -97.219869281045732, 0.81934640522877089, 98.858562091503302, 196.89777777777778, 294.93699346405231, 392.97620915032689, -173.08145658263305, -75.042240896358521, 22.996974789915953, 121.03619047619048, 219.07540616246496, 317.11462184873949, 415.15383753501408, 513.19305322128855, -226.30776470588233, -128.26854901960783, -30.229333333333361, 67.809882352941173, 165.84909803921565, 263.88831372549021, -156.44823529411764, -58.409019607843135, 39.630196078431368, 137.6694117647059, 235.70862745098037, 333.7478431372549, 431.78705882352949, 529.82627450980397, 627.86549019607844]

linear_expected_relative_phen_table_id_phen_list = [111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 407.0, 407.0, 407.0, 407.0, 407.0, 407.0, 407.0, 407.0, 507.0, 507.0, 507.0, 507.0, 507.0, 507.0, 507.0, 507.0, 508.0, 508.0, 508.0, 508.0, 508.0, 508.0, 508.0, 508.0, 508.0, 506.0, 506.0, 506.0, 506.0, 506.0, 506.0, 506.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 607.0, 607.0, 607.0, 607.0, 607.0, 607.0, 607.0, 607.0, 606.0, 606.0, 606.0, 606.0, 606.0, 606.0, 606.0, 608.0, 608.0, 608.0, 608.0, 608.0, 608.0, 608.0, 608.0, 608.0, 706.0, 706.0, 706.0, 706.0, 706.0, 706.0, 706.0, 707.0, 707.0, 707.0, 707.0, 707.0, 707.0, 707.0, 707.0, 705.0, 705.0, 705.0, 705.0, 705.0, 705.0, 708.0, 708.0, 708.0, 708.0, 708.0, 708.0, 708.0, 708.0, 708.0]
linear_expected_relative_phen_table_index_phytomer_list = [0.0, 0.090909090909090912, 0.18181818181818182, 0.27272727272727271, 0.36363636363636365, 0.45454545454545453, 0.54545454545454541, 0.63636363636363635, 0.72727272727272729, 0.81818181818181823, 0.90909090909090906, 1.0, 0.0, 0.10000000000000001, 0.20000000000000001, 0.29999999999999999, 0.40000000000000002, 0.5, 0.59999999999999998, 0.69999999999999996, 0.80000000000000004, 0.90000000000000002, 1.0, 0.0, 0.083333333333333329, 0.16666666666666666, 0.25, 0.33333333333333331, 0.41666666666666669, 0.5, 0.58333333333333337, 0.66666666666666663, 0.75, 0.83333333333333337, 0.91666666666666663, 1.0, 0.0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 0.0, 0.1111111111111111, 0.22222222222222221, 0.33333333333333331, 0.44444444444444442, 0.55555555555555558, 0.66666666666666663, 0.77777777777777779, 0.88888888888888884, 1.0, 0.0, 0.14285714285714285, 0.2857142857142857, 0.42857142857142855, 0.5714285714285714, 0.7142857142857143, 0.8571428571428571, 1.0, 0.0, 0.14285714285714285, 0.2857142857142857, 0.42857142857142855, 0.5714285714285714, 0.7142857142857143, 0.8571428571428571, 1.0, 0.0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 0.0, 0.16666666666666666, 0.33333333333333331, 0.5, 0.66666666666666663, 0.83333333333333337, 1.0, 0.0, 0.1111111111111111, 0.22222222222222221, 0.33333333333333331, 0.44444444444444442, 0.55555555555555558, 0.66666666666666663, 0.77777777777777779, 0.88888888888888884, 1.0, 0.0, 0.14285714285714285, 0.2857142857142857, 0.42857142857142855, 0.5714285714285714, 0.7142857142857143, 0.8571428571428571, 1.0, 0.0, 0.16666666666666666, 0.33333333333333331, 0.5, 0.66666666666666663, 0.83333333333333337, 1.0, 0.0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 0.0, 0.16666666666666666, 0.33333333333333331, 0.5, 0.66666666666666663, 0.83333333333333337, 1.0, 0.0, 0.14285714285714285, 0.2857142857142857, 0.42857142857142855, 0.5714285714285714, 0.7142857142857143, 0.8571428571428571, 1.0, 0.0, 0.20000000000000001, 0.40000000000000002, 0.59999999999999998, 0.80000000000000004, 1.0, 0.0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0]
linear_expected_relative_phen_table_TT_col_phytomer_list = [-98.039215686274503, 0.0, 98.039215686274488, 196.07843137254901, 294.11764705882348, 392.15686274509801, 490.1960784313726, 588.23529411764707, 686.27450980392155, 784.31372549019602, 882.35294117647061, 980.39215686274497, -105.42901960784313, 0.0, 105.42901960784312, 210.85803921568623, 316.28705882352938, 421.71607843137258, 527.14509803921567, 632.57411764705887, 738.00313725490196, 843.43215686274516, 948.86117647058825, -91.942483660130705, 0.0, 91.942483660130691, 183.88496732026141, 275.82745098039209, 367.76993464052282, 459.71241830065361, 551.65490196078429, 643.59738562091502, 735.53986928104575, 827.48235294117649, 919.42483660130722, 1011.367320261438, -121.36593137254906, 0.0, 121.36593137254897, 242.73186274509806, 364.09779411764703, 485.463725490196, 606.82965686274508, 728.19558823529405, 849.56151960784314, -110.60413943355118, 0.0, 110.60413943355121, 221.20827886710236, 331.81241830065363, 442.41655773420479, 553.020697167756, 663.62483660130715, 774.22897603485853, 884.83311546840969, -135.20252100840341, 0.0, 135.20252100840332, 270.40504201680676, 405.60756302521008, 540.81008403361341, 676.01260504201696, 811.21512605042017, -128.03053221288513, 0.0, 128.03053221288519, 256.06106442577038, 384.09159663865557, 512.12212885154077, 640.15266106442573, 768.18319327731092, -115.09044117647062, 0.0, 115.09044117647056, 230.18088235294113, 345.2713235294118, 460.36176470588225, 575.45220588235293, 690.5426470588236, 805.63308823529405, -145.28398692810458, 0.0, 145.28398692810453, 290.56797385620922, 435.85196078431369, 581.13594771241833, 726.4199346405228, -105.02592592592595, 0.0, 105.02592592592589, 210.05185185185178, 315.07777777777778, 420.10370370370379, 525.12962962962956, 630.15555555555557, 735.18148148148157, 840.20740740740735, -115.35378151260505, 0.0, 115.353781512605, 230.70756302521011, 346.0613445378151, 461.4151260504201, 576.76890756302521, 692.12268907563032, -130.49444444444447, 0.0, 130.49444444444441, 260.98888888888894, 391.48333333333346, 521.97777777777776, 652.47222222222229, -103.99828431372549, 0.0, 103.99828431372543, 207.99656862745098, 311.99485294117653, 415.99313725490197, 519.9914215686274, 623.98970588235284, 727.9879901960785, -121.53692810457517, 0.0, 121.53692810457505, 243.07385620915022, 364.61078431372539, 486.14771241830067, 607.68464052287572, -107.67591036414558, 0.0, 107.67591036414569, 215.35182072829139, 323.02773109243697, 430.70364145658255, 538.37955182072824, 646.05546218487393, -140.94235294117641, 0.0, 140.94235294117652, 281.88470588235293, 422.82705882352934, 563.76941176470586, -97.280147058823559, 0.0, 97.280147058823445, 194.560294117647, 291.84044117647056, 389.12058823529412, 486.40073529411745, 583.68088235294101, 680.96102941176457]
linear_expected_relative_phen_table_TT_em_phytomer_list = [-98.005964253794218, 0.0, 98.018808775695874, 196.0580244619704, 294.09724014824485, 392.13645583451938, 490.17567152079397, 588.21488720706839, 686.25410289334286, 784.29331857961733, 882.33253426589204, 980.37174995216628, -98.039215686274517, 0.0, 98.03921568627446, 196.07843137254901, 294.11764705882348, 392.15686274509801, 490.1960784313726, 588.23529411764696, 686.27450980392143, 784.31372549019591, 882.35294117647061, -98.039215686274488, 0.0, 98.039215686274488, 196.07843137254901, 294.11764705882348, 392.15686274509807, 490.19607843137265, 588.23529411764707, 686.27450980392155, 784.31372549019602, 882.35294117647061, 980.39215686274497, -98.039215686274488, -98.039215686274531, 0.0, 98.039215686274474, 196.07843137254901, 294.11764705882348, 392.15686274509801, 490.1960784313726, 588.23529411764707, 686.27450980392155, -98.039215686274531, 0.0, 98.039215686274474, 196.07843137254901, 294.11764705882348, 392.15686274509801, 490.1960784313726, 588.23529411764707, 686.27450980392155, 784.31372549019602, -98.039215686274517, 0.0, 98.039215686274503, 196.07843137254901, 294.11764705882348, 392.15686274509801, 490.1960784313726, 588.23529411764707, -98.039215686274517, 0.0, 98.039215686274517, 196.07843137254906, 294.11764705882354, 392.15686274509807, 490.19607843137265, 588.23529411764707, -98.039215686274503, 0.0, 98.039215686274503, 196.07843137254903, 294.11764705882354, 392.15686274509807, 490.19607843137265, 588.23529411764707, 686.27450980392155, -98.039215686274531, 0.0, 98.039215686274488, 196.07843137254901, 294.11764705882348, 392.15686274509801, 490.1960784313726, -98.039215686274531, 0.0, 98.039215686274474, 196.07843137254901, 294.11764705882348, 392.15686274509801, 490.1960784313726, 588.23529411764707, 686.27450980392155, 784.31372549019602, -98.039215686274503, 0.0, 98.039215686274503, 196.07843137254903, 294.11764705882354, 392.15686274509807, 490.19607843137265, 588.23529411764707, -98.039215686274517, 0.0, 98.039215686274488, 196.07843137254901, 294.11764705882348, 392.15686274509801, 490.1960784313726, -98.039215686274517, 0.0, 98.039215686274488, 196.07843137254901, 294.11764705882348, 392.15686274509807, 490.19607843137265, 588.23529411764707, 686.27450980392155, -98.039215686274503, 0.0, 98.039215686274503, 196.07843137254903, 294.11764705882354, 392.15686274509801, 490.1960784313726, -98.039215686274531, 0.0, 98.039215686274474, 196.07843137254901, 294.11764705882348, 392.15686274509801, 490.1960784313726, 588.23529411764707, -98.039215686274503, 0.0, 98.039215686274474, 196.07843137254901, 294.11764705882348, 392.15686274509801, -98.039215686274503, 0.0, 98.039215686274503, 196.07843137254903, 294.11764705882354, 392.15686274509801, 490.1960784313726, 588.23529411764707, 686.27450980392155]

linear_expected_second_parameters_n_cohort_list = [1.0, 1.0, 1.0, 4.0, 4.0, 4.0, 5.0, 5.0, 5.0, 5.0, 6.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0]
linear_expected_second_parameters_id_axis_list = [111.0, 110.0, 112.0, 408.0, 409.0, 407.0, 507.0, 508.0, 506.0, 509.0, 607.0, 606.0, 608.0, 706.0, 707.0, 705.0, 708.0]
linear_expected_second_parameters_frequency_list = [79.0, 15.0, 6.0, 62.0, 19.0, 9.0, 45.0, 45.0, 4.0, 3.0, 120.0, 22.0, 16.0, 15.0, 13.0, 2.0, 1.0]
linear_expected_second_parameters_nff_list = [11.0, 10.0, 12.0, 8.0, 9.0, 7.0, 7.0, 8.0, 6.0, 9.0, 7.0, 6.0, 8.0, 6.0, 7.0, 5.0, 8.0]
linear_expected_second_parameters_a_cohort_list = [0.010200000000000001, 0.0094850545297644733, 0.010876364877161057, 0.0082395445632132604, 0.0090412529324978876, 0.0073963117887265286, 0.0078106369060251292, 0.0086888188956255625, 0.0068830710193468281, 0.0095214585463906619, 0.0086689832521071458, 0.0076631614798416273, 0.009615543242841959, 0.0082279519121921593, 0.0092871283522761288, 0.0070950993731271035, 0.010279589723433687]
linear_expected_second_parameters_TT_col_0_list = [-0.80000000000000004, -0.80000000000000004, -0.80000000000000004, 246.07254901960781, 246.07254901960781, 246.07254901960781, 334.38627450980385, 334.38627450980385, 334.38627450980385, 334.38627450980385, 446.02352941176463, 446.02352941176463, 446.02352941176463, 568.77843137254911, 568.77843137254911, 568.77843137254911, 568.77843137254911]
linear_expected_second_parameters_TT_col_break_list = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
linear_expected_second_parameters_TT_col_nff_list = [1078.0, 1053.4901960784314, 1102.5098039215686, 1217.0, 1241.5098039215686, 1192.4901960784314, 1230.5999999999999, 1255.1098039215685, 1206.0901960784313, 1279.6196078431371, 1253.5, 1228.9901960784314, 1278.0098039215686, 1298.0, 1322.5098039215686, 1273.4901960784314, 1347.0196078431372]
linear_expected_second_parameters_dTT_MS_cohort_list = [0.0, -24.509803921568626, 24.509803921568626, 139.0, 163.50980392156862, 114.49019607843138, 152.59999999999999, 177.10980392156861, 128.09019607843138, 201.61960784313726, 175.5, 150.99019607843138, 200.00980392156862, 220.0, 244.50980392156862, 195.49019607843138, 269.01960784313724]

bilinear_expected_second_axis_table_index_plt_list = [1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 4.0, 4.0, 5.0, 5.0, 5.0, 5.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 11.0, 11.0, 12.0, 12.0, 12.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 14.0, 14.0, 14.0, 14.0, 14.0, 15.0, 15.0, 15.0, 16.0, 16.0, 16.0, 16.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 18.0, 18.0, 18.0, 18.0, 18.0, 19.0, 19.0, 19.0, 19.0, 19.0, 20.0, 20.0, 20.0, 20.0, 21.0, 21.0, 21.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 23.0, 23.0, 23.0, 23.0, 23.0, 24.0, 24.0, 24.0, 24.0, 25.0, 25.0, 25.0, 25.0, 25.0, 26.0, 26.0, 26.0, 26.0, 26.0, 27.0, 27.0, 27.0, 28.0, 28.0, 28.0, 28.0, 28.0, 28.0, 29.0, 29.0, 29.0, 30.0, 30.0, 30.0, 30.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 32.0, 32.0, 32.0, 33.0, 33.0, 33.0, 34.0, 34.0, 34.0, 34.0, 34.0, 35.0, 35.0, 35.0, 36.0, 36.0, 36.0, 36.0, 36.0, 37.0, 37.0, 37.0, 38.0, 38.0, 38.0, 38.0, 38.0, 39.0, 39.0, 39.0, 39.0, 39.0, 39.0, 40.0, 40.0, 40.0, 40.0, 41.0, 41.0, 41.0, 41.0, 42.0, 42.0, 42.0, 42.0, 42.0, 42.0, 43.0, 43.0, 43.0, 43.0, 44.0, 44.0, 44.0, 44.0, 44.0, 45.0, 45.0, 45.0, 45.0, 45.0, 45.0, 46.0, 46.0, 46.0, 46.0, 46.0, 47.0, 47.0, 47.0, 47.0, 48.0, 48.0, 48.0, 48.0, 48.0, 49.0, 49.0, 49.0, 49.0, 49.0, 50.0, 50.0, 50.0, 50.0, 50.0, 51.0, 51.0, 51.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 53.0, 53.0, 53.0, 53.0, 53.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 55.0, 55.0, 55.0, 55.0, 55.0, 56.0, 56.0, 56.0, 56.0, 56.0, 56.0, 57.0, 57.0, 57.0, 57.0, 57.0, 57.0, 58.0, 58.0, 58.0, 58.0, 58.0, 58.0, 59.0, 59.0, 59.0, 59.0, 59.0, 60.0, 60.0, 60.0, 60.0, 60.0, 61.0, 61.0, 62.0, 62.0, 62.0, 62.0, 62.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 64.0, 64.0, 64.0, 64.0, 65.0, 65.0, 65.0, 65.0, 65.0, 66.0, 66.0, 66.0, 66.0, 67.0, 67.0, 67.0, 67.0, 68.0, 68.0, 68.0, 68.0, 68.0, 68.0, 68.0, 69.0, 69.0, 69.0, 69.0, 70.0, 70.0, 71.0, 71.0, 71.0, 71.0, 71.0, 72.0, 72.0, 72.0, 72.0, 72.0, 73.0, 73.0, 73.0, 73.0, 73.0, 74.0, 74.0, 74.0, 74.0, 74.0, 75.0, 75.0, 75.0, 75.0, 75.0, 76.0, 76.0, 76.0, 76.0, 77.0, 77.0, 77.0, 77.0, 77.0, 78.0, 78.0, 78.0, 78.0, 78.0, 78.0, 79.0, 79.0, 79.0, 79.0, 79.0, 80.0, 80.0, 80.0, 80.0, 80.0, 81.0, 81.0, 81.0, 81.0, 81.0, 82.0, 82.0, 82.0, 82.0, 83.0, 83.0, 83.0, 83.0, 83.0, 83.0, 84.0, 84.0, 84.0, 84.0, 84.0, 84.0, 85.0, 85.0, 85.0, 85.0, 86.0, 86.0, 86.0, 86.0, 86.0, 87.0, 87.0, 87.0, 87.0, 87.0, 88.0, 88.0, 88.0, 88.0, 88.0, 89.0, 89.0, 89.0, 89.0, 89.0, 90.0, 90.0, 90.0, 90.0, 91.0, 91.0, 91.0, 91.0, 91.0, 92.0, 92.0, 92.0, 92.0, 92.0, 93.0, 93.0, 93.0, 94.0, 94.0, 94.0, 94.0, 95.0, 95.0, 95.0, 95.0, 95.0, 96.0, 96.0, 96.0, 96.0, 96.0, 97.0, 97.0, 97.0, 97.0, 97.0, 98.0, 98.0, 98.0, 98.0, 98.0, 99.0, 99.0, 99.0, 99.0, 99.0, 100.0, 100.0, 100.0, 100.0, 100.0]
bilinear_expected_second_axis_table_index_axis_list = [1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 1.0, 4.0, 5.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 5.0, 6.0, 1.0, 4.0, 5.0, 7.0, 1.0, 4.0, 5.0, 6.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 5.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 7.0, 1.0, 5.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 1.0, 4.0, 5.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 5.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 7.0, 1.0, 4.0, 5.0, 7.0, 1.0, 5.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 7.0, 1.0, 5.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 7.0, 1.0, 4.0, 5.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 7.0, 7.0, 1.0, 4.0, 5.0, 6.0, 1.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 7.0, 1.0, 4.0, 6.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 5.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 6.0, 7.0, 1.0, 4.0, 5.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 7.0, 1.0, 5.0, 6.0, 1.0, 4.0, 5.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0, 1.0, 4.0, 5.0, 6.0, 6.0]
bilinear_expected_second_axis_table_N_phyt_list = [11.0, 9.0, 8.0, 7.0, 7.0, 11.0, 8.0, 7.0, 8.0, 11.0, 8.0, 8.0, 7.0, 7.0, 6.0, 12.0, 9.0, 8.0, 8.0, 8.0, 11.0, 8.0, 7.0, 7.0, 11.0, 8.0, 7.0, 7.0, 6.0, 11.0, 8.0, 8.0, 7.0, 7.0, 11.0, 9.0, 8.0, 7.0, 7.0, 7.0, 11.0, 8.0, 8.0, 7.0, 7.0, 12.0, 9.0, 9.0, 8.0, 8.0, 11.0, 8.0, 8.0, 7.0, 11.0, 8.0, 7.0, 7.0, 7.0, 11.0, 8.0, 8.0, 7.0, 11.0, 8.0, 7.0, 7.0, 7.0, 10.0, 6.0, 6.0, 11.0, 8.0, 8.0, 6.0, 11.0, 9.0, 8.0, 7.0, 7.0, 6.0, 11.0, 8.0, 8.0, 7.0, 7.0, 11.0, 8.0, 8.0, 7.0, 7.0, 10.0, 7.0, 7.0, 6.0, 11.0, 8.0, 7.0, 7.0, 7.0, 11.0, 8.0, 8.0, 7.0, 7.0, 11.0, 8.0, 8.0, 7.0, 7.0, 11.0, 9.0, 8.0, 7.0, 11.0, 8.0, 7.0, 7.0, 7.0, 11.0, 8.0, 8.0, 7.0, 7.0, 11.0, 8.0, 7.0, 11.0, 8.0, 7.0, 7.0, 7.0, 6.0, 11.0, 7.0, 7.0, 11.0, 8.0, 7.0, 7.0, 7.0, 11.0, 8.0, 7.0, 7.0, 7.0, 7.0, 11.0, 8.0, 8.0, 7.0, 11.0, 9.0, 7.0, 11.0, 8.0, 7.0, 7.0, 7.0, 10.0, 6.0, 6.0, 11.0, 8.0, 7.0, 7.0, 7.0, 10.0, 7.0, 7.0, 11.0, 8.0, 8.0, 7.0, 8.0, 11.0, 8.0, 8.0, 7.0, 7.0, 7.0, 11.0, 8.0, 8.0, 6.0, 11.0, 8.0, 7.0, 7.0, 11.0, 9.0, 7.0, 7.0, 7.0, 7.0, 11.0, 8.0, 7.0, 7.0, 10.0, 7.0, 7.0, 6.0, 6.0, 11.0, 8.0, 7.0, 7.0, 7.0, 6.0, 11.0, 8.0, 8.0, 7.0, 6.0, 10.0, 8.0, 7.0, 6.0, 11.0, 8.0, 8.0, 7.0, 7.0, 11.0, 8.0, 7.0, 7.0, 6.0, 11.0, 9.0, 7.0, 7.0, 7.0, 11.0, 8.0, 7.0, 11.0, 8.0, 7.0, 7.0, 7.0, 7.0, 11.0, 8.0, 7.0, 7.0, 7.0, 10.0, 7.0, 7.0, 6.0, 6.0, 5.0, 11.0, 8.0, 8.0, 7.0, 7.0, 11.0, 8.0, 8.0, 7.0, 7.0, 6.0, 11.0, 8.0, 8.0, 7.0, 7.0, 7.0, 11.0, 8.0, 7.0, 7.0, 7.0, 6.0, 11.0, 9.0, 7.0, 7.0, 7.0, 11.0, 9.0, 8.0, 7.0, 7.0, 11.0, 8.0, 11.0, 9.0, 7.0, 7.0, 7.0, 10.0, 7.0, 7.0, 7.0, 6.0, 5.0, 11.0, 9.0, 7.0, 7.0, 11.0, 8.0, 8.0, 7.0, 7.0, 11.0, 8.0, 8.0, 7.0, 11.0, 8.0, 8.0, 7.0, 11.0, 8.0, 8.0, 7.0, 7.0, 7.0, 6.0, 12.0, 9.0, 8.0, 8.0, 11.0, 8.0, 11.0, 8.0, 8.0, 7.0, 7.0, 11.0, 8.0, 7.0, 7.0, 6.0, 11.0, 8.0, 7.0, 7.0, 6.0, 11.0, 8.0, 7.0, 7.0, 8.0, 11.0, 8.0, 7.0, 7.0, 7.0, 11.0, 7.0, 8.0, 7.0, 10.0, 7.0, 7.0, 6.0, 7.0, 12.0, 9.0, 9.0, 8.0, 8.0, 8.0, 11.0, 8.0, 8.0, 7.0, 7.0, 11.0, 9.0, 7.0, 7.0, 7.0, 10.0, 7.0, 7.0, 6.0, 6.0, 11.0, 8.0, 8.0, 7.0, 10.0, 7.0, 7.0, 6.0, 6.0, 6.0, 11.0, 8.0, 8.0, 7.0, 7.0, 7.0, 11.0, 8.0, 8.0, 7.0, 10.0, 8.0, 6.0, 6.0, 6.0, 11.0, 8.0, 7.0, 7.0, 7.0, 11.0, 8.0, 8.0, 7.0, 7.0, 11.0, 8.0, 8.0, 7.0, 7.0, 11.0, 8.0, 7.0, 7.0, 11.0, 9.0, 7.0, 7.0, 7.0, 12.0, 9.0, 8.0, 8.0, 7.0, 12.0, 9.0, 8.0, 11.0, 9.0, 8.0, 7.0, 11.0, 8.0, 8.0, 7.0, 8.0, 11.0, 8.0, 8.0, 7.0, 7.0, 10.0, 8.0, 7.0, 6.0, 6.0, 10.0, 8.0, 6.0, 6.0, 6.0, 11.0, 8.0, 7.0, 7.0, 7.0, 10.0, 7.0, 7.0, 6.0, 6.0]
bilinear_expected_second_axis_table_T_stop_axis_list = [585.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 555.0, numpy.nan, numpy.nan, numpy.nan, 564.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 574.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 633.0, numpy.nan, numpy.nan, numpy.nan, 614.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 519.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 620.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 656.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 515.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 645.0, numpy.nan, numpy.nan, numpy.nan, 660.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 570.0, numpy.nan, numpy.nan, numpy.nan, 538.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 664.0, numpy.nan, numpy.nan, 500.0, numpy.nan, numpy.nan, numpy.nan, 654.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 685.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 696.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 679.0, numpy.nan, numpy.nan, numpy.nan, 517.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 578.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 694.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 582.0, numpy.nan, numpy.nan, numpy.nan, 591.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 610.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 568.0, numpy.nan, numpy.nan, 509.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 559.0, numpy.nan, numpy.nan, 557.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 677.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 700.0, numpy.nan, numpy.nan, numpy.nan, 631.0, numpy.nan, numpy.nan, 635.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 511.0, numpy.nan, numpy.nan, 532.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 536.0, numpy.nan, numpy.nan, 673.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 662.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 576.0, numpy.nan, numpy.nan, numpy.nan, 666.0, numpy.nan, numpy.nan, numpy.nan, 603.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 641.0, numpy.nan, numpy.nan, numpy.nan, 505.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 547.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 530.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 698.0, numpy.nan, numpy.nan, numpy.nan, 658.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 566.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 526.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 702.0, numpy.nan, numpy.nan, 553.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 704.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 675.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 706.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 580.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 595.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 601.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 622.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 549.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 681.0, numpy.nan, 637.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 597.0, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 687.0, 998.0, 996.0, 994.0, 690.0, 992.0, 990.0, 988.0, 986.0, 589.0, 984.0, 982.0, 979.0, 692.0, 977.0, 975.0, 973.0, 507.0, 971.0, 969.0, 967.0, 965.0, 963.0, 961.0, 669.0, 958.0, 956.0, 954.0, 524.0, 952.0, 522.0, 950.0, 948.0, 946.0, 944.0, 599.0, 942.0, 940.0, 937.0, 935.0, 534.0, 933.0, 931.0, 929.0, 927.0, 503.0, 925.0, 923.0, 921.0, 919.0, 618.0, 916.0, 914.0, 912.0, 910.0, 612.0, 908.0, 906.0, 904.0, 543.0, 902.0, 900.0, 898.0, 895.0, 593.0, 893.0, 891.0, 889.0, 887.0, 885.0, 561.0, 883.0, 881.0, 879.0, 877.0, 648.0, 874.0, 872.0, 870.0, 868.0, 551.0, 866.0, 864.0, 862.0, 860.0, 540.0, 858.0, 856.0, 853.0, 643.0, 851.0, 849.0, 847.0, 845.0, 843.0, 627.0, 841.0, 839.0, 837.0, 835.0, 832.0, 501.0, 830.0, 828.0, 826.0, 639.0, 824.0, 822.0, 820.0, 818.0, 650.0, 816.0, 814.0, 811.0, 809.0, 572.0, 807.0, 805.0, 803.0, 801.0, 624.0, 799.0, 797.0, 795.0, 793.0, 652.0, 790.0, 788.0, 786.0, 587.0, 784.0, 782.0, 780.0, 778.0, 545.0, 776.0, 774.0, 772.0, 769.0, 671.0, 767.0, 765.0, 528.0, 763.0, 761.0, 759.0, 513.0, 757.0, 755.0, 753.0, 751.0, 606.0, 748.0, 746.0, 744.0, 742.0, 616.0, 740.0, 738.0, 736.0, 734.0, 608.0, 732.0, 729.0, 727.0, 725.0, 629.0, 723.0, 721.0, 719.0, 717.0, 683.0, 715.0, 713.0, 711.0, 708.0]
bilinear_expected_second_axis_table_id_dim_list = [111.0, 409.0, 508.0, 607.0, 607.0, 111.0, 408.0, 507.0, 608.0, 111.0, 408.0, 508.0, 607.0, 607.0, 706.0, 112.0, 409.0, 508.0, 608.0, 608.0, 111.0, 408.0, 507.0, 607.0, 111.0, 408.0, 507.0, 607.0, 706.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 409.0, 508.0, 607.0, 607.0, 707.0, 111.0, 408.0, 508.0, 607.0, 607.0, 112.0, 409.0, 509.0, 608.0, 608.0, 111.0, 408.0, 508.0, 607.0, 111.0, 408.0, 507.0, 607.0, 607.0, 111.0, 408.0, 508.0, 607.0, 111.0, 408.0, 507.0, 607.0, 607.0, 110.0, 506.0, 606.0, 111.0, 408.0, 508.0, 706.0, 111.0, 409.0, 508.0, 607.0, 607.0, 706.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 408.0, 508.0, 607.0, 607.0, 110.0, 407.0, 507.0, 606.0, 111.0, 408.0, 507.0, 607.0, 607.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 409.0, 508.0, 607.0, 111.0, 408.0, 507.0, 607.0, 607.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 508.0, 607.0, 111.0, 408.0, 507.0, 607.0, 607.0, 706.0, 111.0, 507.0, 607.0, 111.0, 408.0, 507.0, 607.0, 607.0, 111.0, 408.0, 507.0, 607.0, 607.0, 707.0, 111.0, 408.0, 508.0, 607.0, 111.0, 409.0, 507.0, 111.0, 408.0, 507.0, 607.0, 607.0, 110.0, 506.0, 606.0, 111.0, 408.0, 507.0, 607.0, 607.0, 110.0, 407.0, 507.0, 111.0, 408.0, 508.0, 607.0, 608.0, 111.0, 408.0, 508.0, 607.0, 607.0, 707.0, 111.0, 408.0, 508.0, 706.0, 111.0, 508.0, 607.0, 707.0, 111.0, 409.0, 507.0, 607.0, 607.0, 707.0, 111.0, 408.0, 507.0, 607.0, 110.0, 407.0, 507.0, 606.0, 606.0, 111.0, 408.0, 507.0, 607.0, 607.0, 706.0, 111.0, 408.0, 508.0, 607.0, 706.0, 110.0, 408.0, 507.0, 606.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 408.0, 507.0, 607.0, 706.0, 111.0, 409.0, 507.0, 607.0, 707.0, 111.0, 508.0, 607.0, 111.0, 408.0, 507.0, 607.0, 607.0, 707.0, 111.0, 408.0, 507.0, 607.0, 607.0, 110.0, 407.0, 507.0, 606.0, 606.0, 705.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 408.0, 508.0, 607.0, 607.0, 706.0, 111.0, 408.0, 508.0, 607.0, 607.0, 707.0, 111.0, 408.0, 507.0, 607.0, 607.0, 706.0, 111.0, 409.0, 507.0, 607.0, 607.0, 111.0, 409.0, 508.0, 607.0, 607.0, 111.0, 608.0, 111.0, 409.0, 507.0, 607.0, 607.0, 110.0, 407.0, 507.0, 607.0, 606.0, 705.0, 111.0, 409.0, 507.0, 607.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 408.0, 508.0, 707.0, 111.0, 408.0, 508.0, 607.0, 111.0, 408.0, 508.0, 607.0, 607.0, 707.0, 706.0, 112.0, 409.0, 508.0, 608.0, 111.0, 608.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 408.0, 507.0, 607.0, 706.0, 111.0, 408.0, 607.0, 607.0, 706.0, 111.0, 408.0, 507.0, 607.0, 608.0, 111.0, 408.0, 507.0, 607.0, 607.0, 111.0, 507.0, 608.0, 707.0, 110.0, 407.0, 507.0, 606.0, 607.0, 112.0, 409.0, 509.0, 608.0, 608.0, 708.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 409.0, 507.0, 607.0, 607.0, 110.0, 407.0, 507.0, 606.0, 606.0, 111.0, 408.0, 508.0, 607.0, 110.0, 407.0, 507.0, 606.0, 606.0, 706.0, 111.0, 408.0, 508.0, 607.0, 607.0, 707.0, 111.0, 408.0, 508.0, 607.0, 110.0, 408.0, 506.0, 606.0, 606.0, 111.0, 408.0, 507.0, 607.0, 607.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 408.0, 507.0, 607.0, 111.0, 409.0, 507.0, 607.0, 607.0, 112.0, 409.0, 508.0, 608.0, 707.0, 112.0, 509.0, 608.0, 111.0, 409.0, 508.0, 607.0, 111.0, 408.0, 508.0, 607.0, 608.0, 111.0, 408.0, 508.0, 607.0, 607.0, 110.0, 408.0, 507.0, 606.0, 606.0, 110.0, 408.0, 506.0, 606.0, 606.0, 111.0, 408.0, 507.0, 607.0, 607.0, 110.0, 407.0, 507.0, 606.0, 606.0]
bilinear_expected_second_axis_table_id_phen_list = [111.0, 409.0, 508.0, 607.0, 607.0, 111.0, 408.0, 507.0, 608.0, 111.0, 408.0, 508.0, 607.0, 607.0, 706.0, 112.0, 409.0, 508.0, 608.0, 608.0, 111.0, 408.0, 507.0, 607.0, 111.0, 408.0, 507.0, 607.0, 706.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 409.0, 508.0, 607.0, 607.0, 707.0, 111.0, 408.0, 508.0, 607.0, 607.0, 112.0, 409.0, 509.0, 608.0, 608.0, 111.0, 408.0, 508.0, 607.0, 111.0, 408.0, 507.0, 607.0, 607.0, 111.0, 408.0, 508.0, 607.0, 111.0, 408.0, 507.0, 607.0, 607.0, 110.0, 506.0, 606.0, 111.0, 408.0, 508.0, 706.0, 111.0, 409.0, 508.0, 607.0, 607.0, 706.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 408.0, 508.0, 607.0, 607.0, 110.0, 407.0, 507.0, 606.0, 111.0, 408.0, 507.0, 607.0, 607.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 409.0, 508.0, 607.0, 111.0, 408.0, 507.0, 607.0, 607.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 508.0, 607.0, 111.0, 408.0, 507.0, 607.0, 607.0, 706.0, 111.0, 507.0, 607.0, 111.0, 408.0, 507.0, 607.0, 607.0, 111.0, 408.0, 507.0, 607.0, 607.0, 707.0, 111.0, 408.0, 508.0, 607.0, 111.0, 409.0, 507.0, 111.0, 408.0, 507.0, 607.0, 607.0, 110.0, 506.0, 606.0, 111.0, 408.0, 507.0, 607.0, 607.0, 110.0, 407.0, 507.0, 111.0, 408.0, 508.0, 607.0, 608.0, 111.0, 408.0, 508.0, 607.0, 607.0, 707.0, 111.0, 408.0, 508.0, 706.0, 111.0, 508.0, 607.0, 707.0, 111.0, 409.0, 507.0, 607.0, 607.0, 707.0, 111.0, 408.0, 507.0, 607.0, 110.0, 407.0, 507.0, 606.0, 606.0, 111.0, 408.0, 507.0, 607.0, 607.0, 706.0, 111.0, 408.0, 508.0, 607.0, 706.0, 110.0, 408.0, 507.0, 606.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 408.0, 507.0, 607.0, 706.0, 111.0, 409.0, 507.0, 607.0, 707.0, 111.0, 508.0, 607.0, 111.0, 408.0, 507.0, 607.0, 607.0, 707.0, 111.0, 408.0, 507.0, 607.0, 607.0, 110.0, 407.0, 507.0, 606.0, 606.0, 705.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 408.0, 508.0, 607.0, 607.0, 706.0, 111.0, 408.0, 508.0, 607.0, 607.0, 707.0, 111.0, 408.0, 507.0, 607.0, 607.0, 706.0, 111.0, 409.0, 507.0, 607.0, 607.0, 111.0, 409.0, 508.0, 607.0, 607.0, 111.0, 608.0, 111.0, 409.0, 507.0, 607.0, 607.0, 110.0, 407.0, 507.0, 607.0, 606.0, 705.0, 111.0, 409.0, 507.0, 607.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 408.0, 508.0, 707.0, 111.0, 408.0, 508.0, 607.0, 111.0, 408.0, 508.0, 607.0, 607.0, 707.0, 706.0, 112.0, 409.0, 508.0, 608.0, 111.0, 608.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 408.0, 507.0, 607.0, 706.0, 111.0, 408.0, 607.0, 607.0, 706.0, 111.0, 408.0, 507.0, 607.0, 608.0, 111.0, 408.0, 507.0, 607.0, 607.0, 111.0, 507.0, 608.0, 707.0, 110.0, 407.0, 507.0, 606.0, 607.0, 112.0, 409.0, 509.0, 608.0, 608.0, 708.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 409.0, 507.0, 607.0, 607.0, 110.0, 407.0, 507.0, 606.0, 606.0, 111.0, 408.0, 508.0, 607.0, 110.0, 407.0, 507.0, 606.0, 606.0, 706.0, 111.0, 408.0, 508.0, 607.0, 607.0, 707.0, 111.0, 408.0, 508.0, 607.0, 110.0, 408.0, 506.0, 606.0, 606.0, 111.0, 408.0, 507.0, 607.0, 607.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 408.0, 508.0, 607.0, 607.0, 111.0, 408.0, 507.0, 607.0, 111.0, 409.0, 507.0, 607.0, 607.0, 112.0, 409.0, 508.0, 608.0, 707.0, 112.0, 509.0, 608.0, 111.0, 409.0, 508.0, 607.0, 111.0, 408.0, 508.0, 607.0, 608.0, 111.0, 408.0, 508.0, 607.0, 607.0, 110.0, 408.0, 507.0, 606.0, 606.0, 110.0, 408.0, 506.0, 606.0, 606.0, 111.0, 408.0, 507.0, 607.0, 607.0, 110.0, 407.0, 507.0, 606.0, 606.0]
bilinear_expected_second_axis_table_id_ear_list = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
bilinear_expected_second_axis_table_T_em_leaf1_list = [-1.0023898242, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 5.5714255114500002, numpy.nan, numpy.nan, numpy.nan, 3.9071947677800001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 3.0046434736299998, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -6.8729381113299999, numpy.nan, numpy.nan, numpy.nan, -4.3096211335600003, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 10.276044586999999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -4.8969109509399997, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -8.5350706385200006, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 11.1583679247, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -7.66730959684, numpy.nan, numpy.nan, numpy.nan, -8.6494058820900008, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 3.40131761051, numpy.nan, numpy.nan, numpy.nan, 7.8066732816700002, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -8.7488692974299997, numpy.nan, numpy.nan, 14.856505364, numpy.nan, numpy.nan, numpy.nan, -8.4708982306300005, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -11.896150929499999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -12.910069291099999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -11.6148386736, numpy.nan, numpy.nan, numpy.nan, 10.489683270700001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 1.09211983091, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -12.785164757800001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 0.20778241302600001, numpy.nan, numpy.nan, numpy.nan, -1.24856774897, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -3.5999996847000002, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 3.6755389248000001, numpy.nan, numpy.nan, 12.1973476168, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 4.5957103336099996, numpy.nan, numpy.nan, 5.3443872199399998, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -11.415036800199999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -13.422524423500001, numpy.nan, numpy.nan, numpy.nan, -6.7922198826200004, numpy.nan, numpy.nan, -6.9708914934199999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 12.053231909000001, numpy.nan, numpy.nan, 8.7790576981299999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 8.3579103589100008, numpy.nan, numpy.nan, -10.8232511623, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -8.6834248536800001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 1.4548934690599999, numpy.nan, numpy.nan, numpy.nan, -9.6184808117399996, numpy.nan, numpy.nan, numpy.nan, -3.10327204278, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -7.3829265284799996, numpy.nan, numpy.nan, numpy.nan, 13.332247556700001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 6.6978771664699996, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 8.9183895103000008, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -13.003940532, numpy.nan, numpy.nan, numpy.nan, -8.6354690950599995, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 3.7659976912399999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 10.106753143700001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -14.1880056572, numpy.nan, numpy.nan, 5.6607548061199999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -14.4132081605, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -11.065578908699999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -14.560646655099999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 0.417440013153, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -1.74454166089, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -2.9394725790899998, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -4.9824996010299998, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 6.5963362644899997, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -11.6399343447, numpy.nan, -7.0267745005900002, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -1.87301169757, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -12.1212200569, numpy.nan, numpy.nan, numpy.nan, -12.372099480699999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -1.0782040533699999, numpy.nan, numpy.nan, numpy.nan, -12.381324637600001, numpy.nan, numpy.nan, numpy.nan, 13.3222263146, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -9.7608688013599991, numpy.nan, numpy.nan, numpy.nan, 10.195515823199999, numpy.nan, 10.239264390300001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -2.58549380515, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 8.66118708622, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 14.152493382799999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -4.61384022855, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -3.9515457446400002, numpy.nan, numpy.nan, numpy.nan, 7.1798690051899996, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -1.70193234605, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 4.5451454469500003, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -7.6958533671499998, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 6.2843986199900002, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 7.4188845062400004, numpy.nan, numpy.nan, numpy.nan, -7.5546508161999997, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -6.3879879581300001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 14.3579907438, numpy.nan, numpy.nan, numpy.nan, -7.1749079157100004, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -7.7862987494200002, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 3.0521080291699998, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -5.0550093754300001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -7.8228099638300002, numpy.nan, numpy.nan, numpy.nan, -1.0076410061600001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, 6.9979462832100001, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -10.5426060281, numpy.nan, numpy.nan, 9.3940185089200003, numpy.nan, numpy.nan, numpy.nan, 11.670752503899999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -3.2785189620600002, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -4.3242231344500004, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -3.4608867569199999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -6.5208869545899999, numpy.nan, numpy.nan, numpy.nan, numpy.nan, -11.664797378399999, numpy.nan, numpy.nan, numpy.nan, numpy.nan]

bilinear_expected_absolute_phen_table_id_phen_list = [111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 407.0, 407.0, 407.0, 407.0, 407.0, 407.0, 407.0, 407.0, 507.0, 507.0, 507.0, 507.0, 507.0, 507.0, 507.0, 507.0, 508.0, 508.0, 508.0, 508.0, 508.0, 508.0, 508.0, 508.0, 508.0, 506.0, 506.0, 506.0, 506.0, 506.0, 506.0, 506.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 607.0, 607.0, 607.0, 607.0, 607.0, 607.0, 607.0, 607.0, 606.0, 606.0, 606.0, 606.0, 606.0, 606.0, 606.0, 608.0, 608.0, 608.0, 608.0, 608.0, 608.0, 608.0, 608.0, 608.0, 706.0, 706.0, 706.0, 706.0, 706.0, 706.0, 706.0, 707.0, 707.0, 707.0, 707.0, 707.0, 707.0, 707.0, 707.0, 705.0, 705.0, 705.0, 705.0, 705.0, 705.0, 708.0, 708.0, 708.0, 708.0, 708.0, 708.0, 708.0, 708.0, 708.0]
bilinear_expected_absolute_phen_table_index_phytomer_list = [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0]
bilinear_expected_absolute_phen_table_TT_col_phytomer_list = [-0.69999999999999996, 88.267971530249113, 177.23594306049824, 266.20391459074733, 355.17188612099648, 497.01527020886732, 657.97939184072277, 818.94351347257816, 979.90763510443367, 1140.8717567362892, 1301.8358783681447, 1462.8, -0.69999999999999996, 88.267971530249113, 177.23594306049824, 266.20391459074733, 355.17188612099648, 514.78172362456689, 699.93698032314114, 885.09223702171528, 1070.2474937202894, 1255.4027504188637, 1440.5580071174377, -0.69999999999999996, 88.267971530249113, 177.23594306049824, 266.20391459074733, 355.17188612099648, 483.8429436742266, 626.87137927541744, 769.89981487660816, 912.92825047779888, 1055.9566860789898, 1198.9851216801806, 1342.0135572813715, 1485.0419928825622, 223.3302491103203, 312.29822064056941, 428.19319826246061, 623.79433188538383, 819.3954655083071, 1014.9965991312301, 1210.5977327541534, 1406.1988663770767, 1601.8, 223.3302491103203, 312.29822064056941, 422.15713766286819, 593.8549741228245, 765.55281058278069, 937.250647042737, 1108.9484835026933, 1280.6463199626496, 1452.3441564226059, 1624.0419928825622, 223.3302491103203, 312.29822064056941, 436.52760731178472, 665.13368727291527, 893.73976723404598, 1122.3458471951765, 1350.9519271563072, 1579.5580071174377, 303.47259786476866, 409.61190511788749, 610.57658759823948, 811.54127007859165, 1012.5059525589436, 1213.4706350392958, 1414.4353175196477, 1615.3999999999999, 303.47259786476866, 405.78126944534199, 581.76137279351633, 757.74147614169055, 933.72157948986501, 1109.7016828380392, 1285.6817861862137, 1461.6618895343879, 1637.6419928825621, 303.47259786476866, 414.92920789922709, 650.57496774286915, 886.22072758651132, 1121.8664874301535, 1357.5122472737955, 1593.1580071174376, 303.47259786476866, 402.89028428879385, 560.01449697333521, 717.13870965787657, 874.26292234241794, 1031.3871350269594, 1188.5113477115008, 1345.6355603960421, 1502.7597730805835, 1659.8839857651246, 429.23858766158077, 601.96164656706924, 774.68470547255765, 947.40776437804607, 1120.1308232835347, 1292.8538821890231, 1465.5769410945115, 1638.3, 436.22258976265721, 632.86182598845392, 829.50106221425074, 1026.1402984400474, 1222.7795346658443, 1419.4187708916411, 1616.0580071174377, 423.93909719966496, 578.51445916002717, 733.08982112038927, 887.66518308075138, 1042.2405450411136, 1196.8159070014756, 1351.3912689618378, 1505.9666309222, 1660.5419928825622, 645.70090825702664, 818.55075688085572, 991.40060550468456, 1164.2504541285134, 1337.1003027523423, 1509.9501513761711, 1682.8, 618.48258709496383, 773.70535935033513, 928.92813160570631, 1084.1509038610775, 1239.3736761164489, 1394.5964483718201, 1549.8192206271913, 1705.0419928825622, 681.23763469346193, 877.10170917825712, 1072.9657836630522, 1268.8298581478475, 1464.6939326326426, 1660.5580071174377, 596.96794970093049, 738.25745420895475, 879.54695871697902, 1020.8364632250034, 1162.1259677330277, 1303.4154722410519, 1444.704976749076, 1585.9944812571002, 1727.2839857651245]
bilinear_expected_absolute_phen_table_TT_em_phytomer_list = [-143.04875444839857, -54.080782918149467, 34.887188612099663, 123.85516014234875, 212.8231316725979, 239.47267559789856, 400.43679722975401, 561.4009188616094, 722.3650404934649, 883.32916212532041, 1044.2932837571759, 1205.2574053890312, -143.04875444839857, -54.080782918149467, 34.887188612099663, 123.85516014234875, 212.8231316725979, 200.76685949114858, 361.73098112300403, 522.69510275485936, 683.65922438671487, 844.62334601857037, 1005.5874676504259, -143.04875444839857, -54.080782918149467, 34.887188612099663, 123.85516014234875, 212.8231316725979, 268.169773246962, 429.1338948788175, 590.09801651067289, 751.0621381425284, 912.0262597743839, 1072.9903814062393, 1233.9545030380946, -143.04875444839857, -143.04875444839857, -54.080782918149467, 34.887188612099663, 123.85516014234875, 212.8231316725979, 184.05345641219014, 345.01757804404559, 505.98169967590098, 666.94582130775643, -143.04875444839857, -54.080782918149467, 34.887188612099663, 123.85516014234875, 212.8231316725979, 222.29873187293725, 383.2628535047927, 544.22697513664809, 705.1910967685036, 866.1552184003591, -143.04875444839857, -54.080782918149467, 34.887188612099663, 123.85516014234875, 212.8231316725979, 131.24554227105835, 292.2096639029138, 453.17378553476919, -143.04875444839857, -54.080782918149467, 34.887188612099663, 123.85516014234875, 212.8231316725979, 175.47177824030399, 336.43589987215944, 497.40002150401483, -143.04875444839857, -54.080782918149467, 34.887188612099663, 123.85516014234875, 212.8231316725979, 215.44710485178842, 376.41122648364387, 537.37534811549926, 698.33946974735477, -143.04875444839857, -54.080782918149467, 34.887188612099663, 123.85516014234875, 212.8231316725979, 119.98205445903994, 280.94617609089539, -143.04875444839857, -54.080782918149467, 34.887188612099663, 123.85516014234875, 212.8231316725979, 245.61652991360111, 406.58065154545659, 567.54477317731198, 728.50889480916749, 889.47301644102299, -143.04875444839857, -54.080782918149467, 34.887188612099663, 123.85516014234875, 212.8231316725979, 220.65837596008572, 381.62249759194117, 542.58661922379656, -143.04875444839857, -54.080782918149467, 34.887188612099663, 123.85516014234875, 212.8231316725979, 182.39249224759249, 343.35661387944793, -143.04875444839857, -54.080782918149467, 34.887188612099663, 123.85516014234875, 212.8231316725979, 249.69469107228787, 410.65881270414332, 571.62293433599871, 732.58705596785421, -143.04875444839857, -54.080782918149467, 34.887188612099663, 123.85516014234875, 212.8231316725979, 220.45551241074105, 381.4196340425965, -143.04875444839857, -54.080782918149467, 34.887188612099663, 123.85516014234875, 212.8231316725979, 248.65883460027334, 409.62295623212879, 570.58707786398418, -143.04875444839857, -54.080782918149467, 34.887188612099663, 123.85516014234875, 212.8231316725979, 183.63275103319506, -143.04875444839857, -54.080782918149467, 34.887188612099663, 123.85516014234875, 212.8231316725979, 270.95206299602847, 431.91618462788392, 592.88030625973931, 753.84442789159482]

bilinear_expected_relative_phen_table_id_phen_list = [111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 112.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 409.0, 407.0, 407.0, 407.0, 407.0, 407.0, 407.0, 407.0, 407.0, 507.0, 507.0, 507.0, 507.0, 507.0, 507.0, 507.0, 507.0, 508.0, 508.0, 508.0, 508.0, 508.0, 508.0, 508.0, 508.0, 508.0, 506.0, 506.0, 506.0, 506.0, 506.0, 506.0, 506.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 509.0, 607.0, 607.0, 607.0, 607.0, 607.0, 607.0, 607.0, 607.0, 606.0, 606.0, 606.0, 606.0, 606.0, 606.0, 606.0, 608.0, 608.0, 608.0, 608.0, 608.0, 608.0, 608.0, 608.0, 608.0, 706.0, 706.0, 706.0, 706.0, 706.0, 706.0, 706.0, 707.0, 707.0, 707.0, 707.0, 707.0, 707.0, 707.0, 707.0, 705.0, 705.0, 705.0, 705.0, 705.0, 705.0, 708.0, 708.0, 708.0, 708.0, 708.0, 708.0, 708.0, 708.0, 708.0]
bilinear_expected_relative_phen_table_index_phytomer_list = [0.0, 0.090909090909090912, 0.18181818181818182, 0.27272727272727271, 0.36363636363636365, 0.45454545454545453, 0.54545454545454541, 0.63636363636363635, 0.72727272727272729, 0.81818181818181823, 0.90909090909090906, 1.0, 0.0, 0.10000000000000001, 0.20000000000000001, 0.29999999999999999, 0.40000000000000002, 0.5, 0.59999999999999998, 0.69999999999999996, 0.80000000000000004, 0.90000000000000002, 1.0, 0.0, 0.083333333333333329, 0.16666666666666666, 0.25, 0.33333333333333331, 0.41666666666666669, 0.5, 0.58333333333333337, 0.66666666666666663, 0.75, 0.83333333333333337, 0.91666666666666663, 1.0, 0.0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 0.0, 0.1111111111111111, 0.22222222222222221, 0.33333333333333331, 0.44444444444444442, 0.55555555555555558, 0.66666666666666663, 0.77777777777777779, 0.88888888888888884, 1.0, 0.0, 0.14285714285714285, 0.2857142857142857, 0.42857142857142855, 0.5714285714285714, 0.7142857142857143, 0.8571428571428571, 1.0, 0.0, 0.14285714285714285, 0.2857142857142857, 0.42857142857142855, 0.5714285714285714, 0.7142857142857143, 0.8571428571428571, 1.0, 0.0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 0.0, 0.16666666666666666, 0.33333333333333331, 0.5, 0.66666666666666663, 0.83333333333333337, 1.0, 0.0, 0.1111111111111111, 0.22222222222222221, 0.33333333333333331, 0.44444444444444442, 0.55555555555555558, 0.66666666666666663, 0.77777777777777779, 0.88888888888888884, 1.0, 0.0, 0.14285714285714285, 0.2857142857142857, 0.42857142857142855, 0.5714285714285714, 0.7142857142857143, 0.8571428571428571, 1.0, 0.0, 0.16666666666666666, 0.33333333333333331, 0.5, 0.66666666666666663, 0.83333333333333337, 1.0, 0.0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 0.0, 0.16666666666666666, 0.33333333333333331, 0.5, 0.66666666666666663, 0.83333333333333337, 1.0, 0.0, 0.14285714285714285, 0.2857142857142857, 0.42857142857142855, 0.5714285714285714, 0.7142857142857143, 0.8571428571428571, 1.0, 0.0, 0.20000000000000001, 0.40000000000000002, 0.59999999999999998, 0.80000000000000004, 1.0, 0.0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0]
bilinear_expected_relative_phen_table_TT_col_phytomer_list = [-88.967971530249116, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 408.74729867861822, 569.71142031047361, 730.675541942329, 891.63966357418451, 1052.6037852060401, 1213.5679068378956, 1374.5320284697509, -88.967971530249116, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 426.51375209431779, 611.66900879289199, 796.82426549146612, 981.97952219004026, 1167.1347788886146, 1352.2900355871886, -88.967971530249116, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 395.5749721439775, 538.60340774516828, 681.63184334635901, 824.66027894754973, 967.68871454874068, 1110.7171501499315, 1253.7455857511225, 1396.7740213523132, -88.967971530249116, 0.0, 115.8949776218912, 311.49611124481441, 507.09724486773769, 702.69837849066073, 898.299512113584, 1093.9006457365072, 1289.5017793594307, -88.967971530249116, 0.0, 109.85891702229878, 281.55675348225509, 453.25458994221128, 624.95242640216759, 796.6502628621239, 968.3480993220802, 1140.0459357820364, 1311.7437722419927, -88.967971530249116, 0.0, 124.22938667121531, 352.83546663234586, 581.44154659347657, 810.04762655460706, 1038.6537065157377, 1267.2597864768682, -106.13930725311883, 0.0, 200.964682480352, 401.92936496070416, 602.89404744105605, 803.85872992140821, 1004.8234124017602, 1205.7880948821123, -102.30867158057333, 0.0, 175.98010334817434, 351.96020669634856, 527.94031004452302, 703.92041339269724, 879.90051674087169, 1055.8806200890458, 1231.8607234372203, -111.45661003445844, 0.0, 235.64575984364205, 471.29151968728422, 706.93727953092639, 942.58303937456844, 1178.2287992182105, -99.417686424025192, 0.0, 157.12421268454136, 314.24842536908272, 471.37263805362409, 628.49685073816556, 785.62106342270692, 942.74527610724829, 1099.8694887917895, 1256.9937014763309, -172.72305890548847, 0.0, 172.72305890548841, 345.44611781097683, 518.16917671646547, 690.89223562195389, 863.6152945274423, 1036.3383534329307, -196.63923622579671, 0.0, 196.63923622579682, 393.27847245159353, 589.91770867739035, 786.55694490318717, 983.19618112898377, -154.57536196036222, 0.0, 154.5753619603621, 309.1507239207242, 463.72608588108642, 618.30144784144841, 772.87680980181062, 927.45217176217284, 1082.0275337225351, -172.84984862382908, 0.0, 172.84984862382885, 345.6996972476577, 518.54954587148654, 691.39939449531539, 864.24924311914424, -155.2227722553713, 0.0, 155.22277225537118, 310.44554451074237, 465.66831676611378, 620.89108902148496, 776.11386127685614, 931.3366335322271, -195.8640744847952, 0.0, 195.86407448479508, 391.72814896959039, 587.59222345438548, 783.45629793918056, -141.28950450802427, 0.0, 141.28950450802427, 282.57900901604864, 423.86851352407291, 565.15801803209717, 706.44752254012121, 847.73702704814548, 989.02653155616974]
bilinear_expected_relative_phen_table_TT_em_phytomer_list = [-88.967971530249102, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 293.55345851604801, 454.51758014790346, 615.48170177975885, 776.44582341161436, 937.40994504346986, 1098.3740666753254, 1259.3381883071806, -88.967971530249102, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 254.84764240929803, 415.81176404115348, 576.77588567300882, 737.74000730486432, 898.70412893671983, 1059.6682505685753, -88.967971530249102, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 322.25055616511145, 483.21467779696695, 644.17879942882234, 805.14292106067785, 966.10704269253335, 1127.0711643243887, 1288.035285956244, -88.967971530249102, -88.967971530249102, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 238.1342393303396, 399.09836096219504, 560.06248259405049, 721.02660422590588, -88.967971530249102, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 276.37951479108671, 437.34363642294215, 598.30775805479755, 759.27187968665305, 920.23600131850856, -88.967971530249102, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 185.32632518920781, 346.29044682106326, 507.25456845291865, -88.967971530249102, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 229.55256115845344, 390.51668279030889, 551.48080442216428, -88.967971530249102, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 269.52788776993788, 430.49200940179333, 591.45613103364872, 752.42025266550422, -88.967971530249102, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 174.0628373771894, 335.02695900904484, -88.967971530249102, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 299.69731283175059, 460.66143446360604, 621.62555609546143, 782.58967772731694, 943.55379935917244, -88.967971530249102, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 274.73915887823517, 435.70328051009062, 596.66740214194601, -88.967971530249102, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 236.47327516574194, 397.43739679759739, -88.967971530249102, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 303.77547399043732, 464.73959562229277, 625.70371725414816, 786.66783888600366, -88.967971530249102, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 274.5362953288905, 435.50041696074595, -88.967971530249102, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 302.73961751842279, 463.70373915027824, 624.66786078213363, -88.967971530249102, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 237.71353395134452, -88.967971530249102, 0.0, 88.96797153024913, 177.93594306049823, 266.90391459074738, 325.03284591417793, 485.99696754603337, 646.96108917788877, 807.92521080974427]

bilinear_expected_second_parameters_n_cohort_list = [1.0, 1.0, 1.0, 4.0, 4.0, 4.0, 5.0, 5.0, 5.0, 5.0, 6.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0]
bilinear_expected_second_parameters_id_axis_list = [111.0, 110.0, 112.0, 408.0, 409.0, 407.0, 507.0, 508.0, 506.0, 509.0, 607.0, 606.0, 608.0, 706.0, 707.0, 705.0, 708.0]
bilinear_expected_second_parameters_frequency_list = [79.0, 15.0, 6.0, 62.0, 19.0, 9.0, 45.0, 45.0, 4.0, 3.0, 120.0, 22.0, 16.0, 15.0, 13.0, 2.0, 1.0]
bilinear_expected_second_parameters_nff_list = [11.0, 10.0, 12.0, 8.0, 9.0, 7.0, 7.0, 8.0, 6.0, 9.0, 7.0, 6.0, 8.0, 6.0, 7.0, 5.0, 8.0]
bilinear_expected_second_parameters_a_cohort_list = [0.01124, 0.01124, 0.01124, 0.01124, 0.01124, 0.01124, 0.01124, 0.01124, 0.01124, 0.01124, 0.01124, 0.01124, 0.01124, 0.01124, 0.01124, 0.01124, 0.01124]
bilinear_expected_second_parameters_TT_col_0_list = [-0.69999999999999996, -0.69999999999999996, -0.69999999999999996, 223.3302491103203, 223.3302491103203, 223.3302491103203, 303.47259786476866, 303.47259786476866, 303.47259786476866, 303.47259786476866, 404.78042704626336, 404.78042704626336, 404.78042704626336, 516.17722419928828, 516.17722419928828, 516.17722419928828, 516.17722419928828]
bilinear_expected_second_parameters_TT_col_break_list = [378.80000000000001, 378.80000000000001, 378.80000000000001, 378.80000000000001, 378.80000000000001, 378.80000000000001, 378.80000000000001, 378.80000000000001, 378.80000000000001, 378.80000000000001, 378.80000000000001, 378.80000000000001, 378.80000000000001, 378.80000000000001, 378.80000000000001, 378.80000000000001, 378.80000000000001]
bilinear_expected_second_parameters_TT_col_nff_list = [1462.8, 1440.5580071174377, 1485.0419928825622, 1601.8, 1624.0419928825622, 1579.5580071174377, 1615.3999999999999, 1637.6419928825621, 1593.1580071174376, 1659.8839857651246, 1638.3, 1616.0580071174377, 1660.5419928825622, 1682.8, 1705.0419928825622, 1660.5580071174377, 1727.2839857651245]
bilinear_expected_second_parameters_dTT_MS_cohort_list = [0.0, -22.241992882562279, 22.241992882562279, 139.0, 161.24199288256227, 116.75800711743773, 152.59999999999999, 174.84199288256227, 130.35800711743772, 197.08398576512457, 175.5, 153.25800711743773, 197.74199288256227, 220.0, 242.24199288256227, 197.75800711743773, 264.48398576512454]

expected_fit_adel_input_data_first_dict = {}
linear_expected_fit_adel_input_data_second_dict = {}
bilinear_expected_fit_adel_input_data_second_dict = {}

def setup_module():

    expected_first_axis_table_array = numpy.array([expected_first_axis_table_index_plt_list, expected_first_axis_table_index_axis_list, 
                                                   expected_first_axis_table_N_phyt_list, expected_first_axis_table_T_stop_axis_list, 
                                                   expected_first_axis_table_id_dim_list, expected_first_axis_table_id_phen_list, 
                                                   expected_first_axis_table_id_ear_list, expected_first_axis_table_T_em_leaf1_list]).transpose()
    expected_first_axis_table_dataframe = pandas.DataFrame(expected_first_axis_table_array, columns=['id_plt', 'id_axis', 'N_phytomer', 'TT_stop_axis', 'id_dim', 'id_phen', 'id_ear', 'TT_em_phytomer1'], dtype=float)
    
    expected_first_parameters_array = numpy.array([expected_first_parameters_n_cohort_list, expected_first_parameters_id_axis_list, 
                                                   expected_first_parameters_frequency_list, expected_first_parameters_nff_list, 
                                                   expected_first_parameters_a_cohort_list, expected_first_parameters_TT_col_0_list,
                                                   expected_first_parameters_TT_col_break_list, expected_first_parameters_TT_col_nff_list,
                                                   expected_first_parameters_dTT_MS_cohort_list]).transpose()
    expected_first_parameters_dataframe = pandas.DataFrame(expected_first_parameters_array, columns=['N_cohort', 'id_axis', 'frequency', 'Nff', 'a_cohort', 'TT_col_0', 'TT_col_break', 'TT_col_nff', 'dTT_MS_cohort'], dtype=float)
    
    expected_fit_adel_input_data_first_dict.update(axis_table=expected_first_axis_table_dataframe, 
                                                   parameters=expected_first_parameters_dataframe)
    
    linear_expected_second_axis_table_array = numpy.array([linear_expected_second_axis_table_index_plt_list, linear_expected_second_axis_table_index_axis_list, 
                                                    linear_expected_second_axis_table_N_phyt_list, linear_expected_second_axis_table_T_stop_axis_list, 
                                                    linear_expected_second_axis_table_id_dim_list, linear_expected_second_axis_table_id_phen_list, 
                                                    linear_expected_second_axis_table_id_ear_list, linear_expected_second_axis_table_T_em_leaf1_list]).transpose()
    linear_expected_second_axis_table_dataframe = pandas.DataFrame(linear_expected_second_axis_table_array, columns=['id_plt', 'id_axis', 'N_phytomer', 'TT_stop_axis', 'id_dim', 'id_phen', 'id_ear', 'TT_em_phytomer1'], dtype=float)
    
    linear_expected_absolute_phen_table_array = numpy.array([linear_expected_absolute_phen_table_id_phen_list, linear_expected_absolute_phen_table_index_phytomer_list,
                                                      linear_expected_absolute_phen_table_TT_col_phytomer_list, linear_expected_absolute_phen_table_TT_em_phytomer_list]).transpose()
    linear_expected_absolute_phen_table_dataframe = pandas.DataFrame(linear_expected_absolute_phen_table_array, columns=['id_phen', 'index_phytomer', 'TT_col_phytomer', 'TT_em_phytomer'], dtype=float)
    
    linear_expected_relative_phen_table_array = numpy.array([linear_expected_relative_phen_table_id_phen_list, linear_expected_relative_phen_table_index_phytomer_list,
                                                      linear_expected_relative_phen_table_TT_col_phytomer_list, linear_expected_relative_phen_table_TT_em_phytomer_list]).transpose()
    linear_expected_relative_phen_table_dataframe = pandas.DataFrame(linear_expected_relative_phen_table_array, columns=['id_phen', 'index_phytomer', 'TT_col_phytomer', 'TT_em_phytomer'], dtype=float)
    
    linear_expected_second_parameters_array = numpy.array([linear_expected_second_parameters_n_cohort_list, linear_expected_second_parameters_id_axis_list, 
                                                   linear_expected_second_parameters_frequency_list, linear_expected_second_parameters_nff_list, 
                                                   linear_expected_second_parameters_a_cohort_list, linear_expected_second_parameters_TT_col_0_list,
                                                   linear_expected_second_parameters_TT_col_break_list, linear_expected_second_parameters_TT_col_nff_list,
                                                   linear_expected_second_parameters_dTT_MS_cohort_list]).transpose()
    linear_expected_second_parameters_dataframe = pandas.DataFrame(linear_expected_second_parameters_array, columns=['N_cohort', 'id_axis', 'frequency', 'Nff', 'a_cohort', 'TT_col_0', 'TT_col_break', 'TT_col_nff', 'dTT_MS_cohort'], dtype=float)
    
    linear_expected_fit_adel_input_data_second_dict.update(axis_table=linear_expected_second_axis_table_dataframe, 
                                                    absolute_phen_table=linear_expected_absolute_phen_table_dataframe,
                                                    relative_phen_table=linear_expected_relative_phen_table_dataframe,
                                                    parameters=linear_expected_second_parameters_dataframe)
    
    
    bilinear_expected_second_axis_table_array = numpy.array([bilinear_expected_second_axis_table_index_plt_list, bilinear_expected_second_axis_table_index_axis_list, 
                                                    bilinear_expected_second_axis_table_N_phyt_list, bilinear_expected_second_axis_table_T_stop_axis_list, 
                                                    bilinear_expected_second_axis_table_id_dim_list, bilinear_expected_second_axis_table_id_phen_list, 
                                                    bilinear_expected_second_axis_table_id_ear_list, bilinear_expected_second_axis_table_T_em_leaf1_list]).transpose()
    bilinear_expected_second_axis_table_dataframe = pandas.DataFrame(bilinear_expected_second_axis_table_array, columns=['id_plt', 'id_axis', 'N_phytomer', 'TT_stop_axis', 'id_dim', 'id_phen', 'id_ear', 'TT_em_phytomer1'], dtype=float)
    
    bilinear_expected_absolute_phen_table_array = numpy.array([bilinear_expected_absolute_phen_table_id_phen_list, bilinear_expected_absolute_phen_table_index_phytomer_list,
                                                      bilinear_expected_absolute_phen_table_TT_col_phytomer_list, bilinear_expected_absolute_phen_table_TT_em_phytomer_list]).transpose()
    bilinear_expected_absolute_phen_table_dataframe = pandas.DataFrame(bilinear_expected_absolute_phen_table_array, columns=['id_phen', 'index_phytomer', 'TT_col_phytomer', 'TT_em_phytomer'], dtype=float)
    
    bilinear_expected_relative_phen_table_array = numpy.array([bilinear_expected_relative_phen_table_id_phen_list, bilinear_expected_relative_phen_table_index_phytomer_list,
                                                      bilinear_expected_relative_phen_table_TT_col_phytomer_list, bilinear_expected_relative_phen_table_TT_em_phytomer_list]).transpose()
    bilinear_expected_relative_phen_table_dataframe = pandas.DataFrame(bilinear_expected_relative_phen_table_array, columns=['id_phen', 'index_phytomer', 'TT_col_phytomer', 'TT_em_phytomer'], dtype=float)
    
    bilinear_expected_second_parameters_array = numpy.array([bilinear_expected_second_parameters_n_cohort_list, bilinear_expected_second_parameters_id_axis_list, 
                                                   bilinear_expected_second_parameters_frequency_list, bilinear_expected_second_parameters_nff_list, 
                                                   bilinear_expected_second_parameters_a_cohort_list, bilinear_expected_second_parameters_TT_col_0_list,
                                                   bilinear_expected_second_parameters_TT_col_break_list, bilinear_expected_second_parameters_TT_col_nff_list,
                                                   bilinear_expected_second_parameters_dTT_MS_cohort_list]).transpose()
    bilinear_expected_second_parameters_dataframe = pandas.DataFrame(bilinear_expected_second_parameters_array, columns=['N_cohort', 'id_axis', 'frequency', 'Nff', 'a_cohort', 'TT_col_0', 'TT_col_break', 'TT_col_nff', 'dTT_MS_cohort'], dtype=float)
    
    bilinear_expected_fit_adel_input_data_second_dict.update(axis_table=bilinear_expected_second_axis_table_dataframe, 
                                                             absolute_phen_table=bilinear_expected_absolute_phen_table_dataframe,
                                                             relative_phen_table=bilinear_expected_relative_phen_table_dataframe,
                                                             parameters=bilinear_expected_second_parameters_dataframe)


def test_fit_adel_input_data_first():
    fit_adel_input_data_first_dict = fit_adel_input_data_first(plant_ids, cohort_probabilities, main_stem_leaves_number_probability_distribution, 
                                                               secondary_stem_leaves_number_coefficients, emf_1_main_stem_standard_deviation, 
                                                               bolting_date, flowering_date)

          
  
    for key in expected_fit_adel_input_data_first_dict.iterkeys():  
        # uncomment the following lines (until "end") to save the results to csv files and open the csv files with the system default editor. 
        import tempfile
        from openalea.core.path import path
        fitting_results_directory = path(tempfile.mkdtemp(suffix='_fitting_results'))
        test_table_filepath = path(fitting_results_directory/'test_first_%s.csv' % key)
        fit_adel_input_data_first_dict[key].to_csv(test_table_filepath, na_rep='NA', index=False)  
        print 'The results has been saved in %s' % fitting_results_directory
        import os
        os.system("start %s" % test_table_filepath.abspath())
        # end   
        numpy.testing.assert_array_almost_equal(fit_adel_input_data_first_dict[key].values,
                                                expected_fit_adel_input_data_first_dict[key].values)
                
    
def test_fit_adel_input_data_second_linear(): 
    user_parameters_array = numpy.array([linear_user_parameters_n_cohort_list, linear_user_parameters_id_axis_list, 
                                         linear_user_parameters_frequency_list, linear_user_parameters_nff_list, 
                                         linear_user_parameters_a_cohort_list, linear_user_parameters_TT_col_0_list,
                                         linear_user_parameters_TT_col_break_list, linear_user_parameters_TT_col_nff_list,
                                         linear_user_parameters_dTT_MS_cohort_list]).transpose()
    user_parameters_dataframe = pandas.DataFrame(user_parameters_array, columns=['N_cohort', 'id_axis', 'frequency', 'Nff', 'a_cohort', 'TT_col_0', 'TT_col_break', 'TT_col_nff', 'dTT_MS_cohort'], dtype=float)
    fit_adel_input_data_second_dict = fit_adel_input_data_second(expected_fit_adel_input_data_first_dict['axis_table'], 
                                                                 user_parameters_dataframe)
    
    for key in linear_expected_fit_adel_input_data_second_dict.iterkeys():  
        # uncomment the following lines (until "end") to save the results to csv files and open the csv files with the system default editor. 
        import tempfile
        from openalea.core.path import path
        fitting_results_directory = path(tempfile.mkdtemp(suffix='_fitting_results'))
        test_table_filepath = path(fitting_results_directory/'linear_test_second_%s.csv' % key)
        fit_adel_input_data_second_dict[key].to_csv(test_table_filepath, na_rep='NA', index=False)  
        print 'The results has been saved in %s' % fitting_results_directory
        import os
        os.system("start %s" % test_table_filepath.abspath())
        # end   
        numpy.testing.assert_array_almost_equal(fit_adel_input_data_second_dict[key].values,
                                                linear_expected_fit_adel_input_data_second_dict[key].values)
        
def test_fit_adel_input_data_second_bilinear(): 
    user_parameters_array = numpy.array([bilinear_user_parameters_n_cohort_list, bilinear_user_parameters_id_axis_list, 
                                         bilinear_user_parameters_frequency_list, bilinear_user_parameters_nff_list, 
                                         bilinear_user_parameters_a_cohort_list, bilinear_user_parameters_TT_col_0_list,
                                         bilinear_user_parameters_TT_col_break_list, bilinear_user_parameters_TT_col_nff_list,
                                         bilinear_user_parameters_dTT_MS_cohort_list]).transpose()
    user_parameters_dataframe = pandas.DataFrame(user_parameters_array, columns=['N_cohort', 'id_axis', 'frequency', 'Nff', 'a_cohort', 'TT_col_0', 'TT_col_break', 'TT_col_nff', 'dTT_MS_cohort'], dtype=float)
    fit_adel_input_data_second_dict = fit_adel_input_data_second(expected_fit_adel_input_data_first_dict['axis_table'], 
                                                                 user_parameters_dataframe)
    
    for key in bilinear_expected_fit_adel_input_data_second_dict.iterkeys():  
        # uncomment the following lines (until "end") to save the results to csv files and open the csv files with the system default editor. 
        import tempfile
        from openalea.core.path import path
        fitting_results_directory = path(tempfile.mkdtemp(suffix='_fitting_results'))
        test_table_filepath = path(fitting_results_directory/'bilinear_test_second_%s.csv' % key)
        fit_adel_input_data_second_dict[key].to_csv(test_table_filepath, na_rep='NA', index=False)  
        print 'The results has been saved in %s' % fitting_results_directory
        import os
        os.system("start %s" % test_table_filepath.abspath())
        # end   
        numpy.testing.assert_array_almost_equal(fit_adel_input_data_second_dict[key].values,
                                                bilinear_expected_fit_adel_input_data_second_dict[key].values)
        
    

